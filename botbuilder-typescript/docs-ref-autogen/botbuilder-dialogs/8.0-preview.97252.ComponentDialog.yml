### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog
    name: ComponentDialog
    fullName: ComponentDialog<O>
    children:
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.addDialog
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.beginDialog
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.constructor
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.configure
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.continueDialog
      - >-
        botbuilder-dialogs -
        v4.8.0-preview.97252.ComponentDialog.createChildContext
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.dialogs
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.endDialog
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.findDialog
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.id
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.onDialogEvent
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.repromptDialog
      - botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.resumeDialog
      - >-
        botbuilder-dialogs -
        v4.8.0-preview.97252.ComponentDialog.telemetryClient
    langs:
      - typeScript
    type: class
    summary: Base class for a dialog that contains other child dialogs.
    extends:
      name: botbuilder-dialogs - v4.8.0-preview.97252.DialogContainer<O>
    package: botbuilder-dialogs - v4
    remarks: >-
      Component dialogs let you break your bot's logic up into components that
      can themselves be added

      as a dialog to another `ComponentDialog` or `DialogSet`. Components can
      also be exported as part

      of a node package and used within other bots.


      To define a new component derive a class from ComponentDialog and add your
      child dialogs within

      the classes constructor:


      ```JavaScript

      const { ComponentDialog, WaterfallDialog, TextPrompt, NumberPrompt } =
      require('botbuilder-dialogs');


      class FillProfileDialog extends ComponentDialog {
          constructor(dialogId) {
              super(dialogId);

              // Add control flow dialogs
              this.addDialog(new WaterfallDialog('start', [
                  async (step) => {
                      // Ask user their name
                      return await step.prompt('namePrompt', `What's your name?`);
                  },
                  async (step) => {
                      // Remember the users answer
                      step.values['name'] = step.result;

                      // Ask user their age.
                      return await step.prompt('agePrompt', `Hi ${step.values['name']}. How old are you?`);
                  },
                  async (step) => {
                      // Remember the users answer
                      step.values['age'] = step.result;

                      // End the component and return the completed profile.
                      return await step.endDialog(step.values);
                  }
              ]));

              // Add prompts
              this.addDialog(new TextPrompt('namePrompt'));
              this.addDialog(new NumberPrompt('agePrompt'))
          }
      }

      module.exports.FillProfileDialog = FillProfileDialog;

      ```


      You can then add new instances of your component to another `DialogSet` or
      `ComponentDialog`:


      ```JavaScript

      const dialogs = new DialogSet(dialogState);

      dialogs.add(new FillProfileDialog('fillProfile'));

      ```
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.addDialog
    name: addDialog(Dialog)
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a child dialog or prompt to the components internal `DialogSet`.
    syntax:
      content: 'function addDialog(dialog: Dialog)'
      parameters:
        - id: dialog
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.Dialog
          description: |
            The child dialog or prompt to add.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs - v4
    remarks: >-
      The `Dialog.id` of the first child added to the component will be assigned
      to the [initialDialogId](#initialdialogid)

      property.
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.beginDialog
    name: 'beginDialog(DialogContext, O)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(outerDC: DialogContext, options?: O)'
      parameters:
        - id: outerDC
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
          description: ''
        - id: options
          type:
            - O
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs - v4.8.0-preview.97252.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.constructor
    name: ComponentDialog(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new Dialog instance.
    syntax:
      content: 'new ComponentDialog(dialogId?: string)'
      parameters:
        - id: dialogId
          type:
            - string
          description: |
            Optional. unique ID of the dialog.
          optional: true
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.configure
    name: configure(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fluent method for configuring the object.
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type:
            - object
          description: |
            Configuration settings to apply.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.continueDialog
    name: continueDialog(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(outerDC: DialogContext)'
      parameters:
        - id: outerDC
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs - v4.8.0-preview.97252.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: >-
      botbuilder-dialogs -
      v4.8.0-preview.97252.ComponentDialog.createChildContext
    name: createChildContext(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates the inner dialog context
    syntax:
      content: 'function createChildContext(outerDC: DialogContext)'
      parameters:
        - id: outerDC
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
          description: |
            the outer dialog context
      return:
        type:
          - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.dialogs
    name: dialogs
    fullName: dialogs
    children: []
    langs:
      - typeScript
    type: property
    summary: The containers dialog set.
    syntax:
      content: 'public dialogs: DialogSet = new DialogSet(undefined)'
      return:
        type:
          - botbuilder-dialogs - v4.8.0-preview.97252.DialogSet
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.endDialog
    name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogInstance
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogReason
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.findDialog
    name: findDialog(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Finds a child dialog that was previously added to the container.
    syntax:
      content: 'function findDialog(dialogId: string)'
      parameters:
        - id: dialogId
          type:
            - string
          description: |
            ID of the dialog to lookup.
      return:
        type:
          - botbuilder-dialogs - v4.8.0-preview.97252.Dialog | undefined
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: string id
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs - v4
    remarks: This will be automatically generated if not specified.
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.onDialogEvent
    name: 'onDialogEvent(DialogContext, DialogEvent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
          description: ''
        - id: e
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogEvent
          description: ''
      return:
        type:
          - Promise<boolean>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.repromptDialog
    name: 'repromptDialog(TurnContext, DialogInstance)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogInstance
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.resumeDialog
    name: 'resumeDialog(DialogContext, DialogReason, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs - v4.8.0-preview.97252.DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs - v4.8.0-preview.97252.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs - v4
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.ComponentDialog.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Set the telemetry client, and also apply it to all child dialogs.
      Future dialogs added to the component will also inherit this client.
      Get the current telemetry client.
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs - v4
references:
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogContainer<O>
    name: DialogContainer<O>
    spec.typeScript:
      - name: DialogContainer
        fullName: DialogContainer
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogContainer
      - name: <O>
        fullName: <O>
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogSet
    name: DialogSet
    spec.typeScript:
      - name: DialogSet
        fullName: DialogSet
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogSet
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.Dialog
    name: Dialog
    spec.typeScript:
      - name: Dialog
        fullName: Dialog
        uid: botbuilder-dialogs - v4.8.0-preview.97252.Dialog
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
    name: DialogContext
    spec.typeScript:
      - name: DialogContext
        fullName: DialogContext
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogContext
  - uid: Promise<botbuilder-dialogs - v4.8.0-preview.97252.DialogTurnResult>
    name: DialogTurnResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogTurnResult
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogInstance
    name: DialogInstance
    spec.typeScript:
      - name: DialogInstance
        fullName: DialogInstance
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogInstance
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogReason
    name: DialogReason
    spec.typeScript:
      - name: DialogReason
        fullName: DialogReason
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogReason
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.Dialog | undefined
    name: Dialog | undefined
    spec.typeScript:
      - name: Dialog
        fullName: Dialog
        uid: botbuilder-dialogs - v4.8.0-preview.97252.Dialog
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogEvent
    name: DialogEvent
    spec.typeScript:
      - name: DialogEvent
        fullName: DialogEvent
        uid: botbuilder-dialogs - v4.8.0-preview.97252.DialogEvent
