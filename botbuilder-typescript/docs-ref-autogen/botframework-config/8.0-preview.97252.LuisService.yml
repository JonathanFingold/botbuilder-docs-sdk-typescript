### YamlMime:UniversalReference
items:
  - uid: botframework-config - v4.8.0-preview.97252.LuisService
    name: LuisService
    fullName: LuisService
    children:
      - botframework-config - v4.8.0-preview.97252.LuisService.appId
      - botframework-config - v4.8.0-preview.97252.LuisService.authoringKey
      - botframework-config - v4.8.0-preview.97252.LuisService.decrypt
      - botframework-config - v4.8.0-preview.97252.LuisService.encrypt
      - botframework-config - v4.8.0-preview.97252.LuisService.getEndpoint
      - botframework-config - v4.8.0-preview.97252.LuisService.id
      - botframework-config - v4.8.0-preview.97252.LuisService.constructor
      - botframework-config - v4.8.0-preview.97252.LuisService.name
      - botframework-config - v4.8.0-preview.97252.LuisService.region
      - botframework-config - v4.8.0-preview.97252.LuisService.subscriptionKey
      - botframework-config - v4.8.0-preview.97252.LuisService.toJSON
      - botframework-config - v4.8.0-preview.97252.LuisService.type
      - botframework-config - v4.8.0-preview.97252.LuisService.version
    langs:
      - typeScript
    type: class
    summary: Defines a LUIS service connection.
    extends:
      name: botframework-config - v4.8.0-preview.97252.ConnectedService
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.appId
    name: appId
    fullName: appId
    children: []
    langs:
      - typeScript
    type: property
    summary: Luis app ID.
    syntax:
      content: 'appId: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.authoringKey
    name: authoringKey
    fullName: authoringKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Authoring key for using authoring api.
    syntax:
      content: 'authoringKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.decrypt
    name: 'decrypt(string, (value: string, secret: string) => string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(secret: string, decryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: decryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.encrypt
    name: 'encrypt(string, (value: string, secret: string) => string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(secret: string, encryptString: (value: string, secret:
        string) => string)
      parameters:
        - id: secret
          type:
            - string
          description: ''
        - id: encryptString
          type:
            - '(value: string, secret: string) => string'
          description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.getEndpoint
    name: getEndpoint()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEndpoint()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique Id for the service.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.constructor
    name: 'LuisService(ILuisService, ServiceTypes)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new LuisService instance.
    syntax:
      content: 'new LuisService(source?: ILuisService, serviceType?: ServiceTypes)'
      parameters:
        - id: source
          type:
            - botframework-config - v4.8.0-preview.97252.ILuisService
          description: (Optional) JSON based service definition.
          optional: true
        - id: serviceType
          type:
            - botframework-config - v4.8.0-preview.97252.ServiceTypes
          description: ''
          optional: true
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Friendly name for the service.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.region
    name: region
    fullName: region
    children: []
    langs:
      - typeScript
    type: property
    summary: Region for luis.
    syntax:
      content: 'region: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.subscriptionKey
    name: subscriptionKey
    fullName: subscriptionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Subscription key for using calling model api for predictions.
    syntax:
      content: 'subscriptionKey: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.toJSON
    name: toJSON()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a JSON based version of the model for saving to disk.
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - botframework-config - v4.8.0-preview.97252.IConnectedService
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'type?: ServiceTypes'
      return:
        type:
          - botframework-config - v4.8.0-preview.97252.ServiceTypes
        description: ''
    package: botframework-config - v4
  - uid: botframework-config - v4.8.0-preview.97252.LuisService.version
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: Version of the application.
    syntax:
      content: 'version: string'
      return:
        type:
          - string
        description: ''
    package: botframework-config - v4
references:
  - uid: botframework-config - v4.8.0-preview.97252.ConnectedService
    name: ConnectedService
    spec.typeScript:
      - name: ConnectedService
        fullName: ConnectedService
        uid: botframework-config - v4.8.0-preview.97252.ConnectedService
  - uid: botframework-config - v4.8.0-preview.97252.ILuisService
    name: ILuisService
    spec.typeScript:
      - name: ILuisService
        fullName: ILuisService
        uid: botframework-config - v4.8.0-preview.97252.ILuisService
  - uid: botframework-config - v4.8.0-preview.97252.ServiceTypes
    name: ServiceTypes
    spec.typeScript:
      - name: ServiceTypes
        fullName: ServiceTypes
        uid: botframework-config - v4.8.0-preview.97252.ServiceTypes
  - uid: botframework-config - v4.8.0-preview.97252.IConnectedService
    name: IConnectedService
    spec.typeScript:
      - name: IConnectedService
        fullName: IConnectedService
        uid: botframework-config - v4.8.0-preview.97252.IConnectedService
