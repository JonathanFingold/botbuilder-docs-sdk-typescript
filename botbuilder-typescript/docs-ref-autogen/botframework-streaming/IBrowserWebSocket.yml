### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.IBrowserWebSocket
    name: IBrowserWebSocket
    fullName: IBrowserWebSocket
    children:
      - botframework-streaming.IBrowserWebSocket.close
      - botframework-streaming.IBrowserWebSocket.onclose
      - botframework-streaming.IBrowserWebSocket.onerror
      - botframework-streaming.IBrowserWebSocket.onmessage
      - botframework-streaming.IBrowserWebSocket.onopen
      - botframework-streaming.IBrowserWebSocket.readyState
      - botframework-streaming.IBrowserWebSocket.send
    langs:
      - typeScript
    type: interface
    summary: >
      Partially represents a WebSocket from the HTML Living Standard.

      For more information, see
      https://html.spec.whatwg.org/multipage/web-sockets.html.

      This interface supports the framework and is not intended to be called
      directly for your code.
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.onclose
    name: onclose
    fullName: onclose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onclose: (event: any) => void'
      return:
        type:
          - '(event: any) => void'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.onerror
    name: onerror
    fullName: onerror
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onerror: (event: any) => void'
      return:
        type:
          - '(event: any) => void'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.onmessage
    name: onmessage
    fullName: onmessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmessage: (event: any) => void'
      return:
        type:
          - '(event: any) => void'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.onopen
    name: onopen
    fullName: onopen
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onopen: (event: any) => void'
      return:
        type:
          - '(event: any) => void'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.readyState
    name: readyState
    fullName: readyState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readyState: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IBrowserWebSocket.send
    name: send(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function send(buffer: any)'
      parameters:
        - id: buffer
          type:
            - any
          description: ''
    package: botframework-streaming
