### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.INodeServer
    name: INodeServer
    fullName: INodeServer
    children:
      - botframework-streaming.INodeServer.constructor
      - botframework-streaming.INodeServer.addListener
      - botframework-streaming.INodeServer.close
      - botframework-streaming.INodeServer.emit
      - botframework-streaming.INodeServer.eventNames
      - botframework-streaming.INodeServer.getMaxListeners
      - botframework-streaming.INodeServer.listen
      - botframework-streaming.INodeServer.listen_1
      - botframework-streaming.INodeServer.listenerCount
      - botframework-streaming.INodeServer.listeners
      - botframework-streaming.INodeServer.off
      - botframework-streaming.INodeServer.on
      - botframework-streaming.INodeServer.once
      - botframework-streaming.INodeServer.prependListener
      - botframework-streaming.INodeServer.prependOnceListener
      - botframework-streaming.INodeServer.rawListeners
      - botframework-streaming.INodeServer.removeAllListeners
      - botframework-streaming.INodeServer.removeListener
      - botframework-streaming.INodeServer.setMaxListeners
    langs:
      - typeScript
    type: interface
    summary: >
      Represents a Server from the `net` module in Node.js.

      This interface supports the framework and is not intended to be called
      directly for your code.
    extends:
      name: botframework-streaming.IEventEmitter
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.constructor
    name: constructor
    fullName: constructor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'constructor: this'
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.close
    name: 'close((err?: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function close(callback?: (err?: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.listen
    name: 'listen(number, string, number, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listen(port?: number, hostname?: string, backlog?: number,
        listeningListener?: () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
          optional: true
        - id: hostname
          type:
            - string
          description: ''
          optional: true
        - id: backlog
          type:
            - number
          description: ''
          optional: true
        - id: listeningListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.listen_1
    name: 'listen(string, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listen(path: string, listeningListener?: () => void)'
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: listeningListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeServer.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
references:
  - uid: botframework-streaming.IEventEmitter
    name: IEventEmitter
    spec.typeScript:
      - name: IEventEmitter
        fullName: IEventEmitter
        uid: botframework-streaming.IEventEmitter
