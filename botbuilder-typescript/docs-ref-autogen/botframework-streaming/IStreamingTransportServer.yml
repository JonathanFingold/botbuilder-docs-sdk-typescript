### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.IStreamingTransportServer
    name: IStreamingTransportServer
    fullName: IStreamingTransportServer
    children:
      - botframework-streaming.IStreamingTransportServer.disconnect
      - botframework-streaming.IStreamingTransportServer.isConnected
      - botframework-streaming.IStreamingTransportServer.send
      - botframework-streaming.IStreamingTransportServer.start
    langs:
      - typeScript
    type: interface
    summary: >-
      Abstraction to define the characteristics of a streaming transport server.

      Example possible implementations include WebSocket transport server or
      NamedPipe transport server.
    package: botframework-streaming
  - uid: botframework-streaming.IStreamingTransportServer.disconnect
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.IStreamingTransportServer.isConnected
    name: isConnected
    fullName: isConnected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isConnected?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IStreamingTransportServer.send
    name: send(StreamingRequest)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function send(request: StreamingRequest)'
      parameters:
        - id: request
          type:
            - botframework-streaming.StreamingRequest
          description: ''
      return:
        type:
          - Promise<botframework-streaming.IReceiveResponse>
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.IStreamingTransportServer.start
    name: start()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function start()
      parameters: []
      return:
        type:
          - Promise<string>
        description: ''
    package: botframework-streaming
references:
  - uid: botframework-streaming.StreamingRequest
    name: StreamingRequest
    spec.typeScript:
      - name: StreamingRequest
        fullName: StreamingRequest
        uid: botframework-streaming.StreamingRequest
  - uid: Promise<botframework-streaming.IReceiveResponse>
    name: IReceiveResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IReceiveResponse
        fullName: IReceiveResponse
        uid: botframework-streaming.IReceiveResponse
      - name: '>'
        fullName: '>'
