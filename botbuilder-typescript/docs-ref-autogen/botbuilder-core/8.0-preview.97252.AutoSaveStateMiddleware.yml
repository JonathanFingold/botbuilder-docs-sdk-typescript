### YamlMime:UniversalReference
items:
  - uid: botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware
    name: AutoSaveStateMiddleware
    fullName: AutoSaveStateMiddleware
    children:
      - botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.add
      - >-
        botbuilder-core -
        v4.8.0-preview.97252.AutoSaveStateMiddleware.constructor
      - >-
        botbuilder-core -
        v4.8.0-preview.97252.AutoSaveStateMiddleware.botStateSet
      - botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.onTurn
    langs:
      - typeScript
    type: class
    summary: >-
      Middleware that will automatically save any state changes at the end of
      the turn.
    package: botbuilder-core - v4
    remarks: >-
      The `AutoSaveStateMiddleware` class should be added towards the top of
      your bot's middleware

      stack, before any other components that use state.  Any `BotState` plugins
      passed to the

      constructor will have their `BotState.saveChanges()` method called upon
      successful completion

      of the turn.


      This example shows boilerplate code for reading and writing conversation
      and user state within

      a bot:


      ```JavaScript

      const { AutoSaveStateMiddleware, ConversationState, UserState,
      MemoryStorage } = require('botbuilder');


      const storage = new MemoryStorage();

      const conversationState = new ConversationState(storage);

      const userState = new UserState(storage);

      adapter.use(new AutoSaveStateMiddleware(conversationState, userState));


      server.post('/api/messages', (req, res) => {
         adapter.processActivity(req, res, async (turnContext) => {
            // Get state
            const convo = await conversationState.load(turnContext);
            const user = await userState.load(turnContext);

            // ... route activity ...
            // ...make changes to state objects...
            // ... no need to call userState.saveChanges() or conversationState.saveChanges() anymore!
         });
      });

      ```
  - uid: botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.add
    name: 'add(BotState[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds additional `BotState` plugins to be saved.
    syntax:
      content: 'function add(botStates: BotState[])'
      parameters:
        - id: botStates
          type:
            - 'botbuilder-core - v4.8.0-preview.97252.BotState[]'
          description: |
            One or more BotState plugins to add.
      return:
        type:
          - this
        description: ''
    package: botbuilder-core - v4
  - uid: botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.constructor
    name: 'AutoSaveStateMiddleware(BotState[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new AutoSaveStateMiddleware instance.
    syntax:
      content: 'new AutoSaveStateMiddleware(botStates: BotState[])'
      parameters:
        - id: botStates
          type:
            - 'botbuilder-core - v4.8.0-preview.97252.BotState[]'
          description: >
            One or more BotState plugins to automatically save at the end of the
            turn.
    package: botbuilder-core - v4
  - uid: botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.botStateSet
    name: botStateSet
    fullName: botStateSet
    children: []
    langs:
      - typeScript
    type: property
    summary: Set of `BotState` plugins being automatically saved.
    syntax:
      content: 'public botStateSet: BotStateSet'
      return:
        type:
          - botbuilder-core - v4.8.0-preview.97252.BotStateSet
        description: ''
    package: botbuilder-core - v4
  - uid: botbuilder-core - v4.8.0-preview.97252.AutoSaveStateMiddleware.onTurn
    name: 'onTurn(TurnContext, () => Promise<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onTurn(context: TurnContext, next: () => Promise<void>)'
      parameters:
        - id: context
          type:
            - botbuilder-core - v4.8.0-preview.97252.TurnContext
          description: ''
        - id: next
          type:
            - () => Promise<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-core - v4
references:
  - uid: 'botbuilder-core - v4.8.0-preview.97252.BotState[]'
    name: 'BotState[]'
    spec.typeScript:
      - name: BotState
        fullName: BotState
        uid: botbuilder-core - v4.8.0-preview.97252.BotState
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder-core - v4.8.0-preview.97252.BotStateSet
    name: BotStateSet
    spec.typeScript:
      - name: BotStateSet
        fullName: BotStateSet
        uid: botbuilder-core - v4.8.0-preview.97252.BotStateSet
  - uid: botbuilder-core - v4.8.0-preview.97252.TurnContext
    name: TurnContext
    spec.typeScript:
      - name: TurnContext
        fullName: TurnContext
        uid: botbuilder-core - v4.8.0-preview.97252.TurnContext
