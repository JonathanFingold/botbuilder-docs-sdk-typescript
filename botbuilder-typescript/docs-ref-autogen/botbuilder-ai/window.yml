### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.window
    name: window
    fullName: window
    children:
      - botbuilder-ai.window.addEventListener
      - botbuilder-ai.window.addEventListener_1
      - botbuilder-ai.window.alert
      - botbuilder-ai.window.applicationCache
      - botbuilder-ai.window.atob
      - botbuilder-ai.window.Blob
      - botbuilder-ai.window.blur
      - botbuilder-ai.window.btoa
      - botbuilder-ai.window.caches
      - botbuilder-ai.window.cancelAnimationFrame
      - botbuilder-ai.window.captureEvents
      - botbuilder-ai.window.clearInterval
      - botbuilder-ai.window.clearTimeout
      - botbuilder-ai.window.clientInformation
      - botbuilder-ai.window.close
      - botbuilder-ai.window.closed
      - botbuilder-ai.window.confirm
      - botbuilder-ai.window.console
      - botbuilder-ai.window.createImageBitmap
      - botbuilder-ai.window.createImageBitmap_1
      - botbuilder-ai.window.crypto
      - botbuilder-ai.window.customElements
      - botbuilder-ai.window.defaultStatus
      - botbuilder-ai.window.departFocus
      - botbuilder-ai.window.devicePixelRatio
      - botbuilder-ai.window.dispatchEvent
      - botbuilder-ai.window.document
      - botbuilder-ai.window.doNotTrack
      - botbuilder-ai.window.event
      - botbuilder-ai.window.external
      - botbuilder-ai.window.fetch
      - botbuilder-ai.window.focus
      - botbuilder-ai.window.frameElement
      - botbuilder-ai.window.frames
      - botbuilder-ai.window.getComputedStyle
      - botbuilder-ai.window.getMatchedCSSRules
      - botbuilder-ai.window.getSelection
      - botbuilder-ai.window.history
      - botbuilder-ai.window.indexedDB
      - botbuilder-ai.window.innerHeight
      - botbuilder-ai.window.innerWidth
      - botbuilder-ai.window.isSecureContext
      - botbuilder-ai.window.length
      - botbuilder-ai.window.localStorage
      - botbuilder-ai.window.location
      - botbuilder-ai.window.locationbar
      - botbuilder-ai.window.matchMedia
      - botbuilder-ai.window.menubar
      - botbuilder-ai.window.moveBy
      - botbuilder-ai.window.moveTo
      - botbuilder-ai.window.msContentScript
      - botbuilder-ai.window.msWriteProfilerMark
      - botbuilder-ai.window.name
      - botbuilder-ai.window.navigator
      - botbuilder-ai.window.offscreenBuffering
      - botbuilder-ai.window.onabort
      - botbuilder-ai.window.onafterprint
      - botbuilder-ai.window.onanimationcancel
      - botbuilder-ai.window.onanimationend
      - botbuilder-ai.window.onanimationiteration
      - botbuilder-ai.window.onanimationstart
      - botbuilder-ai.window.onauxclick
      - botbuilder-ai.window.onbeforeprint
      - botbuilder-ai.window.onbeforeunload
      - botbuilder-ai.window.onblur
      - botbuilder-ai.window.oncancel
      - botbuilder-ai.window.oncanplay
      - botbuilder-ai.window.oncanplaythrough
      - botbuilder-ai.window.onchange
      - botbuilder-ai.window.onclick
      - botbuilder-ai.window.onclose
      - botbuilder-ai.window.oncompassneedscalibration
      - botbuilder-ai.window.oncontextmenu
      - botbuilder-ai.window.oncuechange
      - botbuilder-ai.window.ondblclick
      - botbuilder-ai.window.ondevicelight
      - botbuilder-ai.window.ondevicemotion
      - botbuilder-ai.window.ondeviceorientation
      - botbuilder-ai.window.ondeviceorientationabsolute
      - botbuilder-ai.window.ondrag
      - botbuilder-ai.window.ondragend
      - botbuilder-ai.window.ondragenter
      - botbuilder-ai.window.ondragexit
      - botbuilder-ai.window.ondragleave
      - botbuilder-ai.window.ondragover
      - botbuilder-ai.window.ondragstart
      - botbuilder-ai.window.ondrop
      - botbuilder-ai.window.ondurationchange
      - botbuilder-ai.window.onemptied
      - botbuilder-ai.window.onended
      - botbuilder-ai.window.onerror
      - botbuilder-ai.window.onfocus
      - botbuilder-ai.window.ongotpointercapture
      - botbuilder-ai.window.onhashchange
      - botbuilder-ai.window.oninput
      - botbuilder-ai.window.oninvalid
      - botbuilder-ai.window.onkeydown
      - botbuilder-ai.window.onkeypress
      - botbuilder-ai.window.onkeyup
      - botbuilder-ai.window.onlanguagechange
      - botbuilder-ai.window.onload
      - botbuilder-ai.window.onloadeddata
      - botbuilder-ai.window.onloadedmetadata
      - botbuilder-ai.window.onloadend
      - botbuilder-ai.window.onloadstart
      - botbuilder-ai.window.onlostpointercapture
      - botbuilder-ai.window.onmessage
      - botbuilder-ai.window.onmessageerror
      - botbuilder-ai.window.onmousedown
      - botbuilder-ai.window.onmouseenter
      - botbuilder-ai.window.onmouseleave
      - botbuilder-ai.window.onmousemove
      - botbuilder-ai.window.onmouseout
      - botbuilder-ai.window.onmouseover
      - botbuilder-ai.window.onmouseup
      - botbuilder-ai.window.onmousewheel
      - botbuilder-ai.window.onmsgesturechange
      - botbuilder-ai.window.onmsgesturedoubletap
      - botbuilder-ai.window.onmsgestureend
      - botbuilder-ai.window.onmsgesturehold
      - botbuilder-ai.window.onmsgesturestart
      - botbuilder-ai.window.onmsgesturetap
      - botbuilder-ai.window.onmsinertiastart
      - botbuilder-ai.window.onmspointercancel
      - botbuilder-ai.window.onmspointerdown
      - botbuilder-ai.window.onmspointerenter
      - botbuilder-ai.window.onmspointerleave
      - botbuilder-ai.window.onmspointermove
      - botbuilder-ai.window.onmspointerout
      - botbuilder-ai.window.onmspointerover
      - botbuilder-ai.window.onmspointerup
      - botbuilder-ai.window.onoffline
      - botbuilder-ai.window.ononline
      - botbuilder-ai.window.onorientationchange
      - botbuilder-ai.window.onpagehide
      - botbuilder-ai.window.onpageshow
      - botbuilder-ai.window.onpause
      - botbuilder-ai.window.onplay
      - botbuilder-ai.window.onplaying
      - botbuilder-ai.window.onpointercancel
      - botbuilder-ai.window.onpointerdown
      - botbuilder-ai.window.onpointerenter
      - botbuilder-ai.window.onpointerleave
      - botbuilder-ai.window.onpointermove
      - botbuilder-ai.window.onpointerout
      - botbuilder-ai.window.onpointerover
      - botbuilder-ai.window.onpointerup
      - botbuilder-ai.window.onpopstate
      - botbuilder-ai.window.onprogress
      - botbuilder-ai.window.onratechange
      - botbuilder-ai.window.onreadystatechange
      - botbuilder-ai.window.onrejectionhandled
      - botbuilder-ai.window.onreset
      - botbuilder-ai.window.onresize
      - botbuilder-ai.window.onscroll
      - botbuilder-ai.window.onsecuritypolicyviolation
      - botbuilder-ai.window.onseeked
      - botbuilder-ai.window.onseeking
      - botbuilder-ai.window.onselect
      - botbuilder-ai.window.onselectionchange
      - botbuilder-ai.window.onselectstart
      - botbuilder-ai.window.onstalled
      - botbuilder-ai.window.onstorage
      - botbuilder-ai.window.onsubmit
      - botbuilder-ai.window.onsuspend
      - botbuilder-ai.window.ontimeupdate
      - botbuilder-ai.window.ontoggle
      - botbuilder-ai.window.ontouchcancel
      - botbuilder-ai.window.ontouchend
      - botbuilder-ai.window.ontouchmove
      - botbuilder-ai.window.ontouchstart
      - botbuilder-ai.window.ontransitioncancel
      - botbuilder-ai.window.ontransitionend
      - botbuilder-ai.window.ontransitionrun
      - botbuilder-ai.window.ontransitionstart
      - botbuilder-ai.window.onunhandledrejection
      - botbuilder-ai.window.onunload
      - botbuilder-ai.window.onvolumechange
      - botbuilder-ai.window.onvrdisplayactivate
      - botbuilder-ai.window.onvrdisplayblur
      - botbuilder-ai.window.onvrdisplayconnect
      - botbuilder-ai.window.onvrdisplaydeactivate
      - botbuilder-ai.window.onvrdisplaydisconnect
      - botbuilder-ai.window.onvrdisplayfocus
      - botbuilder-ai.window.onvrdisplaypointerrestricted
      - botbuilder-ai.window.onvrdisplaypointerunrestricted
      - botbuilder-ai.window.onvrdisplaypresentchange
      - botbuilder-ai.window.onwaiting
      - botbuilder-ai.window.onwheel
      - botbuilder-ai.window.open
      - botbuilder-ai.window.opener
      - botbuilder-ai.window.orientation
      - botbuilder-ai.window.origin
      - botbuilder-ai.window.outerHeight
      - botbuilder-ai.window.outerWidth
      - botbuilder-ai.window.pageXOffset
      - botbuilder-ai.window.pageYOffset
      - botbuilder-ai.window.parent
      - botbuilder-ai.window.performance
      - botbuilder-ai.window.personalbar
      - botbuilder-ai.window.postMessage
      - botbuilder-ai.window.print
      - botbuilder-ai.window.prompt
      - botbuilder-ai.window.queueMicrotask
      - botbuilder-ai.window.releaseEvents
      - botbuilder-ai.window.removeEventListener
      - botbuilder-ai.window.removeEventListener_1
      - botbuilder-ai.window.requestAnimationFrame
      - botbuilder-ai.window.resizeBy
      - botbuilder-ai.window.resizeTo
      - botbuilder-ai.window.screen
      - botbuilder-ai.window.screenLeft
      - botbuilder-ai.window.screenTop
      - botbuilder-ai.window.screenX
      - botbuilder-ai.window.screenY
      - botbuilder-ai.window.scroll_1
      - botbuilder-ai.window.scroll
      - botbuilder-ai.window.scrollbars
      - botbuilder-ai.window.scrollBy_1
      - botbuilder-ai.window.scrollBy
      - botbuilder-ai.window.scrollTo_1
      - botbuilder-ai.window.scrollTo
      - botbuilder-ai.window.scrollX
      - botbuilder-ai.window.scrollY
      - botbuilder-ai.window.self
      - botbuilder-ai.window.sessionStorage
      - botbuilder-ai.window.setInterval
      - botbuilder-ai.window.setTimeout
      - botbuilder-ai.window.speechSynthesis
      - botbuilder-ai.window.status
      - botbuilder-ai.window.statusbar
      - botbuilder-ai.window.stop
      - botbuilder-ai.window.styleMedia
      - botbuilder-ai.window.TextDecoder
      - botbuilder-ai.window.TextEncoder
      - botbuilder-ai.window.toolbar
      - botbuilder-ai.window.top
      - botbuilder-ai.window.URL
      - botbuilder-ai.window.URLSearchParams
      - botbuilder-ai.window.webkitCancelAnimationFrame
      - botbuilder-ai.window.webkitConvertPointFromNodeToPage
      - botbuilder-ai.window.webkitConvertPointFromPageToNode
      - botbuilder-ai.window.webkitRequestAnimationFrame
      - botbuilder-ai.window.Window
      - botbuilder-ai.window.window
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Window
    package: botbuilder-ai
  - uid: botbuilder-ai.window.addEventListener
    name: >-
      addEventListener(K, (this: Window, ev: WindowEventMap[K]) => any, boolean
      | AddEventListenerOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addEventListener<K>(type: K, listener: (this: Window, ev:
        WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions)
      parameters:
        - id: type
          type:
            - K
          description: ''
        - id: listener
          type:
            - '(this: Window, ev: WindowEventMap[K]) => any'
          description: ''
        - id: options
          type:
            - boolean | AddEventListenerOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.addEventListener_1
    name: >-
      addEventListener(string, EventListenerOrEventListenerObject, boolean |
      AddEventListenerOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addEventListener(type: string, listener:
        EventListenerOrEventListenerObject, options?: boolean |
        AddEventListenerOptions)
      parameters:
        - id: type
          type:
            - string
          description: ''
        - id: listener
          type:
            - EventListenerOrEventListenerObject
          description: ''
        - id: options
          type:
            - boolean | AddEventListenerOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.alert
    name: alert(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function alert(message?: any)'
      parameters:
        - id: message
          type:
            - any
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.applicationCache
    name: applicationCache
    fullName: applicationCache
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'applicationCache: ApplicationCache'
      return:
        type:
          - ApplicationCache
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.atob
    name: atob(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function atob(encodedString: string)'
      parameters:
        - id: encodedString
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.Blob
    name: Blob
    fullName: Blob
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Blob: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.blur
    name: blur()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function blur()
      parameters: []
    package: botbuilder-ai
  - uid: botbuilder-ai.window.btoa
    name: btoa(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function btoa(rawString: string)'
      parameters:
        - id: rawString
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.caches
    name: caches
    fullName: caches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'caches: CacheStorage'
      return:
        type:
          - CacheStorage
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.cancelAnimationFrame
    name: cancelAnimationFrame(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelAnimationFrame(handle: number)'
      parameters:
        - id: handle
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.captureEvents
    name: captureEvents()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function captureEvents()
      parameters: []
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.clearInterval
    name: clearInterval(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearInterval(handle?: number)'
      parameters:
        - id: handle
          type:
            - number
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.clearTimeout
    name: clearTimeout(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearTimeout(handle?: number)'
      parameters:
        - id: handle
          type:
            - number
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.clientInformation
    name: clientInformation
    fullName: clientInformation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'clientInformation: Navigator'
      return:
        type:
          - Navigator
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: botbuilder-ai
  - uid: botbuilder-ai.window.closed
    name: closed
    fullName: closed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'closed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.confirm
    name: confirm(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function confirm(message?: string)'
      parameters:
        - id: message
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.console
    name: console
    fullName: console
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'console: Console'
      return:
        type:
          - Console
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.createImageBitmap
    name: createImageBitmap(ImageBitmapSource)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createImageBitmap(image: ImageBitmapSource)'
      parameters:
        - id: image
          type:
            - ImageBitmapSource
          description: ''
      return:
        type:
          - Promise<ImageBitmap>
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.createImageBitmap_1
    name: 'createImageBitmap(ImageBitmapSource, number, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createImageBitmap(image: ImageBitmapSource, sx: number, sy:
        number, sw: number, sh: number)
      parameters:
        - id: image
          type:
            - ImageBitmapSource
          description: ''
        - id: sx
          type:
            - number
          description: ''
        - id: sy
          type:
            - number
          description: ''
        - id: sw
          type:
            - number
          description: ''
        - id: sh
          type:
            - number
          description: ''
      return:
        type:
          - Promise<ImageBitmap>
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.crypto
    name: crypto
    fullName: crypto
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'crypto: Crypto'
      return:
        type:
          - Crypto
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.customElements
    name: customElements
    fullName: customElements
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customElements: CustomElementRegistry'
      return:
        type:
          - CustomElementRegistry
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.defaultStatus
    name: defaultStatus
    fullName: defaultStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'defaultStatus: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.departFocus
    name: 'departFocus(NavigationReason, FocusNavigationOrigin)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function departFocus(navigationReason: NavigationReason, origin:
        FocusNavigationOrigin)
      parameters:
        - id: navigationReason
          type:
            - NavigationReason
          description: ''
        - id: origin
          type:
            - FocusNavigationOrigin
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.devicePixelRatio
    name: devicePixelRatio
    fullName: devicePixelRatio
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'devicePixelRatio: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.dispatchEvent
    name: dispatchEvent(Event)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Dispatches a synthetic event event to target and returns true

      if either event's cancelable attribute value is false or its
      preventDefault() method was not invoked, and false otherwise.
    syntax:
      content: 'function dispatchEvent(event: Event)'
      parameters:
        - id: event
          type:
            - Event
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.document
    name: document
    fullName: document
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'document: Document'
      return:
        type:
          - Document
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.doNotTrack
    name: doNotTrack
    fullName: doNotTrack
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'doNotTrack: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.event
    name: event
    fullName: event
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'event: Event | undefined'
      return:
        type:
          - Event | undefined
        description: ''
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.external
    name: external
    fullName: external
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'external: External'
      return:
        type:
          - External
        description: ''
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.fetch
    name: 'fetch(RequestInfo, RequestInit)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function fetch(input: RequestInfo, init?: RequestInit)'
      parameters:
        - id: input
          type:
            - RequestInfo
          description: ''
        - id: init
          type:
            - RequestInit
          description: ''
          optional: true
      return:
        type:
          - Promise<Response>
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.focus
    name: focus()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function focus()
      parameters: []
    package: botbuilder-ai
  - uid: botbuilder-ai.window.frameElement
    name: frameElement
    fullName: frameElement
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'frameElement: Element'
      return:
        type:
          - Element
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.frames
    name: frames
    fullName: frames
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'frames: Window'
      return:
        type:
          - Window
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.getComputedStyle
    name: 'getComputedStyle(Element, string | null)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComputedStyle(elt: Element, pseudoElt?: string | null)'
      parameters:
        - id: elt
          type:
            - Element
          description: ''
        - id: pseudoElt
          type:
            - string | null
          description: ''
          optional: true
      return:
        type:
          - CSSStyleDeclaration
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.getMatchedCSSRules
    name: 'getMatchedCSSRules(Element, string | null)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMatchedCSSRules(elt: Element, pseudoElt?: string | null)'
      parameters:
        - id: elt
          type:
            - Element
          description: ''
        - id: pseudoElt
          type:
            - string | null
          description: ''
          optional: true
      return:
        type:
          - CSSRuleList
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.getSelection
    name: getSelection()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelection()
      parameters: []
      return:
        type:
          - Selection | null
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.history
    name: history
    fullName: history
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'history: History'
      return:
        type:
          - History
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.indexedDB
    name: indexedDB
    fullName: indexedDB
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'indexedDB: IDBFactory'
      return:
        type:
          - IDBFactory
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.innerHeight
    name: innerHeight
    fullName: innerHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'innerHeight: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.innerWidth
    name: innerWidth
    fullName: innerWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'innerWidth: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.isSecureContext
    name: isSecureContext
    fullName: isSecureContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isSecureContext: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'length: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.localStorage
    name: localStorage
    fullName: localStorage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localStorage: Storage'
      return:
        type:
          - Storage
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.location
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'location: Location'
      return:
        type:
          - Location
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.locationbar
    name: locationbar
    fullName: locationbar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'locationbar: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.matchMedia
    name: matchMedia(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchMedia(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: ''
      return:
        type:
          - MediaQueryList
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.menubar
    name: menubar
    fullName: menubar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'menubar: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.moveBy
    name: 'moveBy(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function moveBy(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.moveTo
    name: 'moveTo(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function moveTo(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.msContentScript
    name: msContentScript
    fullName: msContentScript
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'msContentScript: ExtensionScriptApis'
      return:
        type:
          - ExtensionScriptApis
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.msWriteProfilerMark
    name: msWriteProfilerMark(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function msWriteProfilerMark(profilerMarkName: string)'
      parameters:
        - id: profilerMarkName
          type:
            - string
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.navigator
    name: navigator
    fullName: navigator
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'navigator: Navigator'
      return:
        type:
          - Navigator
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.offscreenBuffering
    name: offscreenBuffering
    fullName: offscreenBuffering
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'offscreenBuffering: string | boolean'
      return:
        type:
          - string | boolean
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onabort
    name: onabort
    fullName: onabort
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user aborts the download.
    syntax:
      content: 'onabort: (this: GlobalEventHandlers, ev: UIEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: UIEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onafterprint
    name: onafterprint
    fullName: onafterprint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onafterprint: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onanimationcancel
    name: onanimationcancel
    fullName: onanimationcancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onanimationcancel: (this: GlobalEventHandlers, ev: AnimationEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: AnimationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onanimationend
    name: onanimationend
    fullName: onanimationend
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onanimationend: (this: GlobalEventHandlers, ev: AnimationEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: AnimationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onanimationiteration
    name: onanimationiteration
    fullName: onanimationiteration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onanimationiteration: (this: GlobalEventHandlers, ev: AnimationEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: AnimationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onanimationstart
    name: onanimationstart
    fullName: onanimationstart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onanimationstart: (this: GlobalEventHandlers, ev: AnimationEvent) => any
        | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: AnimationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onauxclick
    name: onauxclick
    fullName: onauxclick
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onauxclick: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onbeforeprint
    name: onbeforeprint
    fullName: onbeforeprint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onbeforeprint: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onbeforeunload
    name: onbeforeunload
    fullName: onbeforeunload
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onbeforeunload: (this: WindowEventHandlers, ev: BeforeUnloadEvent) =>
        any | null
      return:
        type:
          - '(this: WindowEventHandlers, ev: BeforeUnloadEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onblur
    name: onblur
    fullName: onblur
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the object loses the input focus.
    syntax:
      content: 'onblur: (this: GlobalEventHandlers, ev: FocusEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: FocusEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncancel
    name: oncancel
    fullName: oncancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oncancel: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncanplay
    name: oncanplay
    fullName: oncanplay
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Occurs when playback is possible, but would require further buffering.'
    syntax:
      content: 'oncanplay: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncanplaythrough
    name: oncanplaythrough
    fullName: oncanplaythrough
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oncanplaythrough: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onchange
    name: onchange
    fullName: onchange
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the contents of the object or selection have changed.
    syntax:
      content: 'onchange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onclick
    name: onclick
    fullName: onclick
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user clicks the left mouse button on the object
    syntax:
      content: 'onclick: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onclose
    name: onclose
    fullName: onclose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onclose: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncompassneedscalibration
    name: oncompassneedscalibration
    fullName: oncompassneedscalibration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oncompassneedscalibration: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncontextmenu
    name: oncontextmenu
    fullName: oncontextmenu
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires when the user clicks the right mouse button in the client area,
      opening the context menu.
    syntax:
      content: 'oncontextmenu: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oncuechange
    name: oncuechange
    fullName: oncuechange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oncuechange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondblclick
    name: ondblclick
    fullName: ondblclick
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user double-clicks the object.
    syntax:
      content: 'ondblclick: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondevicelight
    name: ondevicelight
    fullName: ondevicelight
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ondevicelight: (this: Window, ev: DeviceLightEvent) => any | null'
      return:
        type:
          - '(this: Window, ev: DeviceLightEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondevicemotion
    name: ondevicemotion
    fullName: ondevicemotion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ondevicemotion: (this: Window, ev: DeviceMotionEvent) => any | null'
      return:
        type:
          - '(this: Window, ev: DeviceMotionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondeviceorientation
    name: ondeviceorientation
    fullName: ondeviceorientation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ondeviceorientation: (this: Window, ev: DeviceOrientationEvent) => any |
        null
      return:
        type:
          - '(this: Window, ev: DeviceOrientationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondeviceorientationabsolute
    name: ondeviceorientationabsolute
    fullName: ondeviceorientationabsolute
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ondeviceorientationabsolute: (this: Window, ev: DeviceOrientationEvent)
        => any | null
      return:
        type:
          - '(this: Window, ev: DeviceOrientationEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondrag
    name: ondrag
    fullName: ondrag
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires on the source object continuously during a drag operation.
    syntax:
      content: 'ondrag: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragend
    name: ondragend
    fullName: ondragend
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires on the source object when the user releases the mouse at the close
      of a drag operation.
    syntax:
      content: 'ondragend: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragenter
    name: ondragenter
    fullName: ondragenter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires on the target element when the user drags the object to a valid drop
      target.
    syntax:
      content: 'ondragenter: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragexit
    name: ondragexit
    fullName: ondragexit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ondragexit: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragleave
    name: ondragleave
    fullName: ondragleave
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires on the target object when the user moves the mouse out of a valid
      drop target during a drag operation.
    syntax:
      content: 'ondragleave: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragover
    name: ondragover
    fullName: ondragover
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires on the target element continuously while the user drags the object
      over a valid drop target.
    syntax:
      content: 'ondragover: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondragstart
    name: ondragstart
    fullName: ondragstart
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires on the source object when the user starts to drag a text selection
      or selected object.
    syntax:
      content: 'ondragstart: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondrop
    name: ondrop
    fullName: ondrop
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ondrop: (this: GlobalEventHandlers, ev: DragEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: DragEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ondurationchange
    name: ondurationchange
    fullName: ondurationchange
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the duration attribute is updated.
    syntax:
      content: 'ondurationchange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onemptied
    name: onemptied
    fullName: onemptied
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the media element is reset to its initial state.
    syntax:
      content: 'onemptied: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onended
    name: onended
    fullName: onended
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the end of playback is reached.
    syntax:
      content: 'onended: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onerror
    name: onerror
    fullName: onerror
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when an error occurs during object loading.
    syntax:
      content: 'onerror: OnErrorEventHandler'
      return:
        type:
          - OnErrorEventHandler
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onfocus
    name: onfocus
    fullName: onfocus
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the object receives focus.
    syntax:
      content: 'onfocus: (this: GlobalEventHandlers, ev: FocusEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: FocusEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ongotpointercapture
    name: ongotpointercapture
    fullName: ongotpointercapture
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ongotpointercapture: (this: GlobalEventHandlers, ev: PointerEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onhashchange
    name: onhashchange
    fullName: onhashchange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onhashchange: (this: WindowEventHandlers, ev: HashChangeEvent) => any |
        null
      return:
        type:
          - '(this: WindowEventHandlers, ev: HashChangeEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oninput
    name: oninput
    fullName: oninput
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oninput: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.oninvalid
    name: oninvalid
    fullName: oninvalid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'oninvalid: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onkeydown
    name: onkeydown
    fullName: onkeydown
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user presses a key.
    syntax:
      content: 'onkeydown: (this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onkeypress
    name: onkeypress
    fullName: onkeypress
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user presses an alphanumeric key.
    syntax:
      content: 'onkeypress: (this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onkeyup
    name: onkeyup
    fullName: onkeyup
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user releases a key.
    syntax:
      content: 'onkeyup: (this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: KeyboardEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onlanguagechange
    name: onlanguagechange
    fullName: onlanguagechange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onlanguagechange: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onload
    name: onload
    fullName: onload
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires immediately after the browser loads the object.
    syntax:
      content: 'onload: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onloadeddata
    name: onloadeddata
    fullName: onloadeddata
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when media data is loaded at the current playback position.
    syntax:
      content: 'onloadeddata: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onloadedmetadata
    name: onloadedmetadata
    fullName: onloadedmetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the duration and dimensions of the media have been determined.
    syntax:
      content: 'onloadedmetadata: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onloadend
    name: onloadend
    fullName: onloadend
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onloadend: (this: GlobalEventHandlers, ev: ProgressEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: ProgressEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onloadstart
    name: onloadstart
    fullName: onloadstart
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when Internet Explorer begins looking for media data.
    syntax:
      content: 'onloadstart: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onlostpointercapture
    name: onlostpointercapture
    fullName: onlostpointercapture
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onlostpointercapture: (this: GlobalEventHandlers, ev: PointerEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmessage
    name: onmessage
    fullName: onmessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmessage: (this: WindowEventHandlers, ev: MessageEvent) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: MessageEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmessageerror
    name: onmessageerror
    fullName: onmessageerror
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onmessageerror: (this: WindowEventHandlers, ev: MessageEvent) => any |
        null
      return:
        type:
          - '(this: WindowEventHandlers, ev: MessageEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmousedown
    name: onmousedown
    fullName: onmousedown
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user clicks the object with either mouse button.
    syntax:
      content: 'onmousedown: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmouseenter
    name: onmouseenter
    fullName: onmouseenter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmouseenter: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmouseleave
    name: onmouseleave
    fullName: onmouseleave
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmouseleave: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmousemove
    name: onmousemove
    fullName: onmousemove
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user moves the mouse over the object.
    syntax:
      content: 'onmousemove: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmouseout
    name: onmouseout
    fullName: onmouseout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires when the user moves the mouse pointer outside the boundaries of the
      object.
    syntax:
      content: 'onmouseout: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmouseover
    name: onmouseover
    fullName: onmouseover
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user moves the mouse pointer into the object.
    syntax:
      content: 'onmouseover: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmouseup
    name: onmouseup
    fullName: onmouseup
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires when the user releases a mouse button while the mouse is over the
      object.
    syntax:
      content: 'onmouseup: (this: GlobalEventHandlers, ev: MouseEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: MouseEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmousewheel
    name: onmousewheel
    fullName: onmousewheel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmousewheel: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgesturechange
    name: onmsgesturechange
    fullName: onmsgesturechange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgesturechange: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgesturedoubletap
    name: onmsgesturedoubletap
    fullName: onmsgesturedoubletap
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgesturedoubletap: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgestureend
    name: onmsgestureend
    fullName: onmsgestureend
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgestureend: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgesturehold
    name: onmsgesturehold
    fullName: onmsgesturehold
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgesturehold: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgesturestart
    name: onmsgesturestart
    fullName: onmsgesturestart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgesturestart: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsgesturetap
    name: onmsgesturetap
    fullName: onmsgesturetap
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsgesturetap: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmsinertiastart
    name: onmsinertiastart
    fullName: onmsinertiastart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmsinertiastart: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointercancel
    name: onmspointercancel
    fullName: onmspointercancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointercancel: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerdown
    name: onmspointerdown
    fullName: onmspointerdown
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerdown: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerenter
    name: onmspointerenter
    fullName: onmspointerenter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerenter: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerleave
    name: onmspointerleave
    fullName: onmspointerleave
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerleave: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointermove
    name: onmspointermove
    fullName: onmspointermove
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointermove: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerout
    name: onmspointerout
    fullName: onmspointerout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerout: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerover
    name: onmspointerover
    fullName: onmspointerover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerover: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onmspointerup
    name: onmspointerup
    fullName: onmspointerup
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onmspointerup: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onoffline
    name: onoffline
    fullName: onoffline
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onoffline: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ononline
    name: ononline
    fullName: ononline
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ononline: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onorientationchange
    name: onorientationchange
    fullName: onorientationchange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onorientationchange: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.onpagehide
    name: onpagehide
    fullName: onpagehide
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpagehide: (this: WindowEventHandlers, ev: PageTransitionEvent) => any
        | null
      return:
        type:
          - '(this: WindowEventHandlers, ev: PageTransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpageshow
    name: onpageshow
    fullName: onpageshow
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpageshow: (this: WindowEventHandlers, ev: PageTransitionEvent) => any
        | null
      return:
        type:
          - '(this: WindowEventHandlers, ev: PageTransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpause
    name: onpause
    fullName: onpause
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when playback is paused.
    syntax:
      content: 'onpause: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onplay
    name: onplay
    fullName: onplay
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the play method is requested.
    syntax:
      content: 'onplay: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onplaying
    name: onplaying
    fullName: onplaying
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the audio or video has started playing.
    syntax:
      content: 'onplaying: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointercancel
    name: onpointercancel
    fullName: onpointercancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointercancel: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerdown
    name: onpointerdown
    fullName: onpointerdown
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointerdown: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerenter
    name: onpointerenter
    fullName: onpointerenter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointerenter: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerleave
    name: onpointerleave
    fullName: onpointerleave
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointerleave: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointermove
    name: onpointermove
    fullName: onpointermove
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointermove: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerout
    name: onpointerout
    fullName: onpointerout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointerout: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerover
    name: onpointerover
    fullName: onpointerover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onpointerover: (this: GlobalEventHandlers, ev: PointerEvent) => any |
        null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpointerup
    name: onpointerup
    fullName: onpointerup
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onpointerup: (this: GlobalEventHandlers, ev: PointerEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: PointerEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onpopstate
    name: onpopstate
    fullName: onpopstate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onpopstate: (this: WindowEventHandlers, ev: PopStateEvent) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: PopStateEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onprogress
    name: onprogress
    fullName: onprogress
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs to indicate progress while downloading media data.
    syntax:
      content: 'onprogress: (this: GlobalEventHandlers, ev: ProgressEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: ProgressEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onratechange
    name: onratechange
    fullName: onratechange
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the playback rate is increased or decreased.
    syntax:
      content: 'onratechange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onreadystatechange
    name: onreadystatechange
    fullName: onreadystatechange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onreadystatechange: (this: Window, ev: ProgressEvent) => any | null'
      return:
        type:
          - '(this: Window, ev: ProgressEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onrejectionhandled
    name: onrejectionhandled
    fullName: onrejectionhandled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onrejectionhandled: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onreset
    name: onreset
    fullName: onreset
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the user resets a form.
    syntax:
      content: 'onreset: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onresize
    name: onresize
    fullName: onresize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onresize: (this: GlobalEventHandlers, ev: UIEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: UIEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onscroll
    name: onscroll
    fullName: onscroll
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fires when the user repositions the scroll box in the scroll bar on the
      object.
    syntax:
      content: 'onscroll: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onsecuritypolicyviolation
    name: onsecuritypolicyviolation
    fullName: onsecuritypolicyviolation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onsecuritypolicyviolation: (this: GlobalEventHandlers, ev:
        SecurityPolicyViolationEvent) => any | null
      return:
        type:
          - >-
            (this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any
            | null
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onseeked
    name: onseeked
    fullName: onseeked
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the seek operation ends.
    syntax:
      content: 'onseeked: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onseeking
    name: onseeking
    fullName: onseeking
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the current playback position is moved.
    syntax:
      content: 'onseeking: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onselect
    name: onselect
    fullName: onselect
    children: []
    langs:
      - typeScript
    type: property
    summary: Fires when the current selection changes.
    syntax:
      content: 'onselect: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onselectionchange
    name: onselectionchange
    fullName: onselectionchange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onselectionchange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onselectstart
    name: onselectstart
    fullName: onselectstart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onselectstart: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onstalled
    name: onstalled
    fullName: onstalled
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs when the download has stopped.
    syntax:
      content: 'onstalled: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onstorage
    name: onstorage
    fullName: onstorage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onstorage: (this: WindowEventHandlers, ev: StorageEvent) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: StorageEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onsubmit
    name: onsubmit
    fullName: onsubmit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onsubmit: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onsuspend
    name: onsuspend
    fullName: onsuspend
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs if the load operation has been intentionally halted.
    syntax:
      content: 'onsuspend: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontimeupdate
    name: ontimeupdate
    fullName: ontimeupdate
    children: []
    langs:
      - typeScript
    type: property
    summary: Occurs to indicate the current playback position.
    syntax:
      content: 'ontimeupdate: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontoggle
    name: ontoggle
    fullName: ontoggle
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ontoggle: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontouchcancel
    name: ontouchcancel
    fullName: ontouchcancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ontouchcancel: (this: GlobalEventHandlers, ev: TouchEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TouchEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontouchend
    name: ontouchend
    fullName: ontouchend
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ontouchend: (this: GlobalEventHandlers, ev: TouchEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TouchEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontouchmove
    name: ontouchmove
    fullName: ontouchmove
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ontouchmove: (this: GlobalEventHandlers, ev: TouchEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TouchEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontouchstart
    name: ontouchstart
    fullName: ontouchstart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ontouchstart: (this: GlobalEventHandlers, ev: TouchEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TouchEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontransitioncancel
    name: ontransitioncancel
    fullName: ontransitioncancel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ontransitioncancel: (this: GlobalEventHandlers, ev: TransitionEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontransitionend
    name: ontransitionend
    fullName: ontransitionend
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ontransitionend: (this: GlobalEventHandlers, ev: TransitionEvent) => any
        | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontransitionrun
    name: ontransitionrun
    fullName: ontransitionrun
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ontransitionrun: (this: GlobalEventHandlers, ev: TransitionEvent) => any
        | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.ontransitionstart
    name: ontransitionstart
    fullName: ontransitionstart
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ontransitionstart: (this: GlobalEventHandlers, ev: TransitionEvent) =>
        any | null
      return:
        type:
          - '(this: GlobalEventHandlers, ev: TransitionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onunhandledrejection
    name: onunhandledrejection
    fullName: onunhandledrejection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        onunhandledrejection: (this: WindowEventHandlers, ev:
        PromiseRejectionEvent) => any | null
      return:
        type:
          - '(this: WindowEventHandlers, ev: PromiseRejectionEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onunload
    name: onunload
    fullName: onunload
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onunload: (this: WindowEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: WindowEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvolumechange
    name: onvolumechange
    fullName: onvolumechange
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Occurs when the volume is changed, or playback is muted or unmuted.'
    syntax:
      content: 'onvolumechange: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplayactivate
    name: onvrdisplayactivate
    fullName: onvrdisplayactivate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplayactivate: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplayblur
    name: onvrdisplayblur
    fullName: onvrdisplayblur
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplayblur: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplayconnect
    name: onvrdisplayconnect
    fullName: onvrdisplayconnect
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplayconnect: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplaydeactivate
    name: onvrdisplaydeactivate
    fullName: onvrdisplaydeactivate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplaydeactivate: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplaydisconnect
    name: onvrdisplaydisconnect
    fullName: onvrdisplaydisconnect
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplaydisconnect: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplayfocus
    name: onvrdisplayfocus
    fullName: onvrdisplayfocus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplayfocus: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplaypointerrestricted
    name: onvrdisplaypointerrestricted
    fullName: onvrdisplaypointerrestricted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplaypointerrestricted: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplaypointerunrestricted
    name: onvrdisplaypointerunrestricted
    fullName: onvrdisplaypointerunrestricted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplaypointerunrestricted: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onvrdisplaypresentchange
    name: onvrdisplaypresentchange
    fullName: onvrdisplaypresentchange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onvrdisplaypresentchange: (this: Window, ev: Event) => any | null'
      return:
        type:
          - '(this: Window, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onwaiting
    name: onwaiting
    fullName: onwaiting
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Occurs when playback stops because the next frame of a video resource is
      not available.
    syntax:
      content: 'onwaiting: (this: GlobalEventHandlers, ev: Event) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: Event) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.onwheel
    name: onwheel
    fullName: onwheel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onwheel: (this: GlobalEventHandlers, ev: WheelEvent) => any | null'
      return:
        type:
          - '(this: GlobalEventHandlers, ev: WheelEvent) => any | null'
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.open
    name: 'open(string, string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function open(url?: string, target?: string, features?: string,
        replace?: boolean)
      parameters:
        - id: url
          type:
            - string
          description: ''
          optional: true
        - id: target
          type:
            - string
          description: ''
          optional: true
        - id: features
          type:
            - string
          description: ''
          optional: true
        - id: replace
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - Window | null
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.opener
    name: opener
    fullName: opener
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'opener: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.orientation
    name: orientation
    fullName: orientation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'orientation: string | number'
      return:
        type:
          - string | number
        description: ''
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.origin
    name: origin
    fullName: origin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'origin: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.outerHeight
    name: outerHeight
    fullName: outerHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'outerHeight: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.outerWidth
    name: outerWidth
    fullName: outerWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'outerWidth: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.pageXOffset
    name: pageXOffset
    fullName: pageXOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pageXOffset: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.pageYOffset
    name: pageYOffset
    fullName: pageYOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pageYOffset: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parent: Window'
      return:
        type:
          - Window
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.performance
    name: performance
    fullName: performance
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'performance: Performance'
      return:
        type:
          - Performance
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.personalbar
    name: personalbar
    fullName: personalbar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'personalbar: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.postMessage
    name: 'postMessage(any, string, Transferable[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function postMessage(message: any, targetOrigin: string, transfer?:
        Transferable[])
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: targetOrigin
          type:
            - string
          description: ''
        - id: transfer
          type:
            - 'Transferable[]'
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.print
    name: print()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function print()
      parameters: []
    package: botbuilder-ai
  - uid: botbuilder-ai.window.prompt
    name: 'prompt(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prompt(message?: string, _default?: string)'
      parameters:
        - id: message
          type:
            - string
          description: ''
          optional: true
        - id: _default
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - string | null
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.queueMicrotask
    name: queueMicrotask(Function)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function queueMicrotask(callback: Function)'
      parameters:
        - id: callback
          type:
            - Function
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.releaseEvents
    name: releaseEvents()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function releaseEvents()
      parameters: []
    package: botbuilder-ai
    deprecated:
      content: ''
  - uid: botbuilder-ai.window.removeEventListener
    name: >-
      removeEventListener(K, (this: Window, ev: WindowEventMap[K]) => any,
      boolean | EventListenerOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeEventListener<K>(type: K, listener: (this: Window, ev:
        WindowEventMap[K]) => any, options?: boolean | EventListenerOptions)
      parameters:
        - id: type
          type:
            - K
          description: ''
        - id: listener
          type:
            - '(this: Window, ev: WindowEventMap[K]) => any'
          description: ''
        - id: options
          type:
            - boolean | EventListenerOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.removeEventListener_1
    name: >-
      removeEventListener(string, EventListenerOrEventListenerObject, boolean |
      EventListenerOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeEventListener(type: string, listener:
        EventListenerOrEventListenerObject, options?: boolean |
        EventListenerOptions)
      parameters:
        - id: type
          type:
            - string
          description: ''
        - id: listener
          type:
            - EventListenerOrEventListenerObject
          description: ''
        - id: options
          type:
            - boolean | EventListenerOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.requestAnimationFrame
    name: requestAnimationFrame(FrameRequestCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function requestAnimationFrame(callback: FrameRequestCallback)'
      parameters:
        - id: callback
          type:
            - FrameRequestCallback
          description: ''
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.resizeBy
    name: 'resizeBy(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resizeBy(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.resizeTo
    name: 'resizeTo(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resizeTo(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.screen
    name: screen
    fullName: screen
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'screen: Screen'
      return:
        type:
          - Screen
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.screenLeft
    name: screenLeft
    fullName: screenLeft
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'screenLeft: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.screenTop
    name: screenTop
    fullName: screenTop
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'screenTop: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.screenX
    name: screenX
    fullName: screenX
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'screenX: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.screenY
    name: screenY
    fullName: screenY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'screenY: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scroll_1
    name: 'scroll(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scroll(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scroll
    name: scroll(ScrollToOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scroll(options?: ScrollToOptions)'
      parameters:
        - id: options
          type:
            - ScrollToOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollbars
    name: scrollbars
    fullName: scrollbars
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'scrollbars: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollBy_1
    name: 'scrollBy(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scrollBy(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollBy
    name: scrollBy(ScrollToOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scrollBy(options?: ScrollToOptions)'
      parameters:
        - id: options
          type:
            - ScrollToOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollTo_1
    name: 'scrollTo(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scrollTo(x: number, y: number)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollTo
    name: scrollTo(ScrollToOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function scrollTo(options?: ScrollToOptions)'
      parameters:
        - id: options
          type:
            - ScrollToOptions
          description: ''
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollX
    name: scrollX
    fullName: scrollX
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'scrollX: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.scrollY
    name: scrollY
    fullName: scrollY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'scrollY: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.self
    name: self
    fullName: self
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'self: Window'
      return:
        type:
          - Window
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.sessionStorage
    name: sessionStorage
    fullName: sessionStorage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sessionStorage: Storage'
      return:
        type:
          - Storage
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.setInterval
    name: 'setInterval(TimerHandler, number, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setInterval(handler: TimerHandler, timeout?: number, arguments:
        any[])
      parameters:
        - id: handler
          type:
            - TimerHandler
          description: ''
        - id: timeout
          type:
            - number
          description: ''
          optional: true
        - id: arguments
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.setTimeout
    name: 'setTimeout(TimerHandler, number, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setTimeout(handler: TimerHandler, timeout?: number, arguments:
        any[])
      parameters:
        - id: handler
          type:
            - TimerHandler
          description: ''
        - id: timeout
          type:
            - number
          description: ''
          optional: true
        - id: arguments
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.speechSynthesis
    name: speechSynthesis
    fullName: speechSynthesis
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'speechSynthesis: SpeechSynthesis'
      return:
        type:
          - SpeechSynthesis
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.status
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'status: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.statusbar
    name: statusbar
    fullName: statusbar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusbar: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.stop
    name: stop()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function stop()
      parameters: []
    package: botbuilder-ai
  - uid: botbuilder-ai.window.styleMedia
    name: styleMedia
    fullName: styleMedia
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'styleMedia: StyleMedia'
      return:
        type:
          - StyleMedia
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.TextDecoder
    name: TextDecoder
    fullName: TextDecoder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'TextDecoder: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.TextEncoder
    name: TextEncoder
    fullName: TextEncoder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'TextEncoder: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.toolbar
    name: toolbar
    fullName: toolbar
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'toolbar: BarProp'
      return:
        type:
          - BarProp
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.top
    name: top
    fullName: top
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'top: Window'
      return:
        type:
          - Window
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.URL
    name: URL
    fullName: URL
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'URL: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.URLSearchParams
    name: URLSearchParams
    fullName: URLSearchParams
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'URLSearchParams: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.webkitCancelAnimationFrame
    name: webkitCancelAnimationFrame(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function webkitCancelAnimationFrame(handle: number)'
      parameters:
        - id: handle
          type:
            - number
          description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.webkitConvertPointFromNodeToPage
    name: 'webkitConvertPointFromNodeToPage(Node, WebKitPoint)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint)'
      parameters:
        - id: node
          type:
            - Node
          description: ''
        - id: pt
          type:
            - WebKitPoint
          description: ''
      return:
        type:
          - WebKitPoint
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.webkitConvertPointFromPageToNode
    name: 'webkitConvertPointFromPageToNode(Node, WebKitPoint)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint)'
      parameters:
        - id: node
          type:
            - Node
          description: ''
        - id: pt
          type:
            - WebKitPoint
          description: ''
      return:
        type:
          - WebKitPoint
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.webkitRequestAnimationFrame
    name: webkitRequestAnimationFrame(FrameRequestCallback)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function webkitRequestAnimationFrame(callback: FrameRequestCallback)'
      parameters:
        - id: callback
          type:
            - FrameRequestCallback
          description: ''
      return:
        type:
          - number
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.Window
    name: Window
    fullName: Window
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Window: Object'
      return:
        type:
          - Object
        description: ''
    package: botbuilder-ai
  - uid: botbuilder-ai.window.window
    name: window
    fullName: window
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'window: Window'
      return:
        type:
          - Window
        description: ''
    package: botbuilder-ai
