### YamlMime:UniversalReference
items:
  - uid: botbuilder-ai.LuisRecognizer
    name: LuisRecognizer
    fullName: LuisRecognizer
    children:
      - botbuilder-ai.LuisRecognizer.constructor
      - botbuilder-ai.LuisRecognizer.recognize
      - botbuilder-ai.LuisRecognizer.topIntent
    langs:
      - typeScript
    type: class
    summary: Recognize intents in a user utterance using a configured LUIS model.
    package: botbuilder-ai
    remarks: >-
      This class is used to recognize intents and extract entities from incoming
      messages.

      See this class in action [in this sample
      application](https://github.com/Microsoft/BotBuilder-Samples/tree/master/samples/javascript_nodejs/12.nlp-with-luis).


      This component can be used within your bots logic by calling
      [recognize()](#recognize).
  - uid: botbuilder-ai.LuisRecognizer.constructor
    name: LuisRecognizer
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new LuisRecognizer instance.
    syntax:
      content: >-
        new LuisRecognizer(application: LuisApplication, options?:
        LuisPredictionOptions, includeApiResults?: boolean)
      parameters:
        - id: application
          type:
            - botbuilder-ai.LuisApplication
          description: >-
            An object conforming to the [LuisApplication](#luisapplication)
            definition.
        - id: options
          type:
            - botbuilder-ai.LuisPredictionOptions
          description: >-
            (Optional) options object used to control predictions. Should
            conform to the [LuisPrectionOptions](#luispredictionoptions)
            definition.
          optional: true
        - id: includeApiResults
          type:
            - boolean
          description: >
            (Optional) flag that if set to `true` will force the inclusion of
            LUIS Api call in results returned by [recognize()](#recognize).
            Defaults to a value of `false`.
          optional: true
    package: botbuilder-ai
  - uid: botbuilder-ai.LuisRecognizer.recognize
    name: recognize
    children: []
    type: method
    langs:
      - typeScript
    summary: Calls LUIS to recognize intents and entities in a users utterance.
    syntax:
      content: 'function recognize(context: TurnContext)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: |
            Context for the current turn of conversation with the use.
      return:
        type:
          - Promise<RecognizerResult>
    package: botbuilder-ai
    remarks: >-
      Returns a [RecognizerResult](../botbuilder-core/recognizerresult)
      containing any intents and entities recognized by LUIS.


      In addition to returning the results from LUIS, [recognize()](#recognize)
      will also

      emit a trace activity that contains the LUIS results.


      Here is an example of recognize being used within a bot's turn handler: to
      interpret an incoming message:


      ```javascript

      async onTurn(context) {
          if (turnContext.activity.type === ActivityTypes.Message) {
              const results = await luisRecognizer.recognize(turnContext);
              const topIntent = LuisRecognizer.topIntent(results);
              switch (topIntent) {
                  case 'MyIntent':
                      // ... handle intent ...
                      break;
                  case 'None':
                      // ... handle intent ...
                      break;
              }
          }
      }

      ```
  - uid: botbuilder-ai.LuisRecognizer.topIntent
    name: topIntent
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the name of the top scoring intent from a set of LUIS results.
    syntax:
      content: >-
        static function topIntent(results: RecognizerResult | undefined,
        defaultIntent: string, minScore: number)
      parameters:
        - id: results
          type:
            - RecognizerResult | undefined
          description: Result set to be searched.
        - id: defaultIntent
          type:
            - string
          description: >-
            (Optional) intent name to return should a top intent be found.
            Defaults to a value of `None`.
        - id: minScore
          type:
            - number
          description: >
            (Optional) minimum score needed for an intent to be considered as a
            top intent. If all intents in the set are below this threshold then
            the `defaultIntent` will be returned.  Defaults to a value of `0.0`.
      return:
        type:
          - string
    package: botbuilder-ai
references:
  - uid: botbuilder-ai.LuisApplication
    name: LuisApplication
    spec.typeScript:
      - name: LuisApplication
        fullName: LuisApplication
        uid: botbuilder-ai.LuisApplication
  - uid: botbuilder-ai.LuisPredictionOptions
    name: LuisPredictionOptions
    spec.typeScript:
      - name: LuisPredictionOptions
        fullName: LuisPredictionOptions
        uid: botbuilder-ai.LuisPredictionOptions
