### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.EntityEvents
    name: EntityEvents
    fullName: EntityEvents
    children:
      - botbuilder-dialogs-adaptive.EntityEvents.assignEntities
      - botbuilder-dialogs-adaptive.EntityEvents.chooseEntities
      - botbuilder-dialogs-adaptive.EntityEvents.chooseProperties
      - botbuilder-dialogs-adaptive.EntityEvents.clearProperties
      - botbuilder-dialogs-adaptive.EntityEvents.create
      - botbuilder-dialogs-adaptive.EntityEvents.dequeueEvent
      - botbuilder-dialogs-adaptive.EntityEvents.read
      - botbuilder-dialogs-adaptive.EntityEvents.write
    langs:
      - typeScript
    type: class
    summary: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.assignEntities
    name: assignEntities
    fullName: assignEntities
    children: []
    langs:
      - typeScript
    type: property
    summary: List of mappings where a property is ready to be set to a specific entity.
    syntax:
      content: 'assignEntities: Partial<EntityAssignment>[]'
      return:
        type:
          - 'Partial<botbuilder-dialogs-adaptive.EntityAssignment>[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.chooseEntities
    name: chooseEntities
    fullName: chooseEntities
    children: []
    langs:
      - typeScript
    type: property
    summary: List of ambiguous entities and the property they should be assigned to.
    syntax:
      content: 'chooseEntities: Partial<EntityAssignment>[]'
      return:
        type:
          - 'Partial<botbuilder-dialogs-adaptive.EntityAssignment>[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.chooseProperties
    name: chooseProperties
    fullName: chooseProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: List of entities that can be consumed by more than one property.
    syntax:
      content: 'chooseProperties: Partial<EntityAssignment>[][]'
      return:
        type:
          - 'Partial<botbuilder-dialogs-adaptive.EntityAssignment>[][]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.clearProperties
    name: clearProperties
    fullName: clearProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: List of properties to clear.
    syntax:
      content: 'clearProperties: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.create
    name: create()
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new `EntityEvents` instance.
    syntax:
      content: static function create()
      parameters: []
      return:
        type:
          - botbuilder-dialogs-adaptive.EntityEvents
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.dequeueEvent
    name: 'dequeueEvent(EntityEvents, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove an event result from queues.
    syntax:
      content: 'static function dequeueEvent(_this: EntityEvents, eventName: string)'
      parameters:
        - id: _this
          type:
            - botbuilder-dialogs-adaptive.EntityEvents
          description: Source event queues.
        - id: eventName
          type:
            - string
          description: Event to remove.
      return:
        type:
          - boolean
        description: True if the specified event was found.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.read
    name: read(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Read event queues from memory.
    syntax:
      content: 'static function read(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: |
            Context for current turn of conversation.
      return:
        type:
          - botbuilder-dialogs-adaptive.EntityEvents
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.EntityEvents.write
    name: 'write(DialogContext, EntityEvents)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Save event queues to memory.
    syntax:
      content: 'static function write(dc: DialogContext, events: EntityEvents)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: Context for current turn of conversation.
        - id: events
          type:
            - botbuilder-dialogs-adaptive.EntityEvents
          description: |
            Event queues to save.
    package: botbuilder-dialogs-adaptive
references:
  - uid: 'Partial<botbuilder-dialogs-adaptive.EntityAssignment>[]'
    name: 'EntityAssignment>[]'
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: EntityAssignment
        fullName: EntityAssignment
        uid: botbuilder-dialogs-adaptive.EntityAssignment
      - name: '>[]'
        fullName: '>[]'
  - uid: 'Partial<botbuilder-dialogs-adaptive.EntityAssignment>[][]'
    name: 'EntityAssignment>[][]'
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: EntityAssignment
        fullName: EntityAssignment
        uid: botbuilder-dialogs-adaptive.EntityAssignment
      - name: '>[][]'
        fullName: '>[][]'
  - uid: botbuilder-dialogs-adaptive.EntityEvents
    name: EntityEvents
    spec.typeScript:
      - name: EntityEvents
        fullName: EntityEvents
        uid: botbuilder-dialogs-adaptive.EntityEvents
