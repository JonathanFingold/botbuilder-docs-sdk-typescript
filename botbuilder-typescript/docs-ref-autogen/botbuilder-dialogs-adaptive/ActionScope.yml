### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.ActionScope
    name: ActionScope
    fullName: ActionScope<O>
    children:
      - botbuilder-dialogs-adaptive.ActionScope.actions
      - botbuilder-dialogs-adaptive.ActionScope.constructor
      - botbuilder-dialogs-adaptive.ActionScope.beginDialog
      - botbuilder-dialogs-adaptive.ActionScope.configure
      - botbuilder-dialogs-adaptive.ActionScope.continueDialog
      - botbuilder-dialogs-adaptive.ActionScope.endDialog
      - botbuilder-dialogs-adaptive.ActionScope.EndOfTurn
      - botbuilder-dialogs-adaptive.ActionScope.getDependencies
      - botbuilder-dialogs-adaptive.ActionScope.getVersion
      - botbuilder-dialogs-adaptive.ActionScope.id
      - botbuilder-dialogs-adaptive.ActionScope.onDialogEvent
      - botbuilder-dialogs-adaptive.ActionScope.repromptDialog
      - botbuilder-dialogs-adaptive.ActionScope.resumeDialog
      - botbuilder-dialogs-adaptive.ActionScope.telemetryClient
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: Dialog<O>
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.actions
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: The actions to execute.
    syntax:
      content: 'actions: Dialog[]'
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.constructor
    name: 'ActionScope(Dialog[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new `ActionScope` instance.
    syntax:
      content: 'new ActionScope(actions?: Dialog[])'
      parameters:
        - id: actions
          type:
            - 'Dialog[]'
          description: ''
          optional: true
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.beginDialog
    name: 'beginDialog(DialogContext, O)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: options
          type:
            - O
          description: ''
          optional: true
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.configure
    name: configure(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fluent method for configuring the object.
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type:
            - object
          description: |
            Configuration settings to apply.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.continueDialog
    name: continueDialog(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.endDialog
    name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type:
            - DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
  - uid: botbuilder-dialogs-adaptive.ActionScope.EndOfTurn
    name: EndOfTurn
    fullName: EndOfTurn
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets a default end-of-turn result.
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type:
          - DialogTurnResult
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
  - uid: botbuilder-dialogs-adaptive.ActionScope.getDependencies
    name: getDependencies()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDependencies()
      parameters: []
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.getVersion
    name: getVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    syntax:
      content: function getVersion()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
  - uid: botbuilder-dialogs-adaptive.ActionScope.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: This will be automatically generated if not specified.
  - uid: botbuilder-dialogs-adaptive.ActionScope.onDialogEvent
    name: 'onDialogEvent(DialogContext, DialogEvent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: e
          type:
            - DialogEvent
          description: ''
      return:
        type:
          - Promise<boolean>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.repromptDialog
    name: 'repromptDialog(TurnContext, DialogInstance)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'When overridden in a derived class, reprompts the user for input.'
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
  - uid: botbuilder-dialogs-adaptive.ActionScope.resumeDialog
    name: 'resumeDialog(DialogContext, DialogReason, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: _reason
          type:
            - DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ActionScope.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the telemetry client for this dialog.
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs-adaptive
