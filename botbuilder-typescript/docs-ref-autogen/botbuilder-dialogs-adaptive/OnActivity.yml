### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.OnActivity
    name: OnActivity
    fullName: OnActivity
    children:
      - botbuilder-dialogs-adaptive.OnActivity.actions
      - botbuilder-dialogs-adaptive.OnActivity.addExternalCondition
      - botbuilder-dialogs-adaptive.OnActivity.condition
      - botbuilder-dialogs-adaptive.OnActivity.currentPriority
      - botbuilder-dialogs-adaptive.OnActivity.event
      - botbuilder-dialogs-adaptive.OnActivity.execute
      - botbuilder-dialogs-adaptive.OnActivity.getDependencies
      - botbuilder-dialogs-adaptive.OnActivity.getExpression
      - botbuilder-dialogs-adaptive.OnActivity.id
      - botbuilder-dialogs-adaptive.OnActivity.constructor
      - botbuilder-dialogs-adaptive.OnActivity.priority
      - botbuilder-dialogs-adaptive.OnActivity.runOnce
      - botbuilder-dialogs-adaptive.OnActivity.type
    langs:
      - typeScript
    type: class
    summary: Actions triggered when a Activity of a given type is received.
    extends:
      name: botbuilder-dialogs-adaptive.OnDialogEvent
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.actions
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the actions to add to the plan when the rule constraints are
      met.
    syntax:
      content: 'actions: Dialog[]'
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.addExternalCondition
    name: addExternalCondition(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add external condition to the OnCondition
    syntax:
      content: 'function addExternalCondition(condition: string)'
      parameters:
        - id: condition
          type:
            - string
          description: >
            External constraint to add, it will be AND'ed to all other
            constraints.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.condition
    name: condition
    fullName: condition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the condition which needs to be met for the actions to be
      executed (OPTIONAL).
    syntax:
      content: 'condition: BoolExpression'
      return:
        type:
          - BoolExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.currentPriority
    name: currentPriority(ActionContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Compute the current value of the priority expression and return it.
    syntax:
      content: 'function currentPriority(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type:
            - botbuilder-dialogs-adaptive.ActionContext
          description: Context to use for evaluation.
      return:
        type:
          - number
        description: Computed priority.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.event
    name: event
    fullName: event
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets the event to fire on.
    syntax:
      content: 'event: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.execute
    name: execute(ActionContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Method called to execute the condition's actions.
    syntax:
      content: 'function execute(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type:
            - botbuilder-dialogs-adaptive.ActionContext
          description: Context.
      return:
        type:
          - 'Promise<botbuilder-dialogs-adaptive.ActionChangeList[]>'
        description: A promise with plan change list.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.getDependencies
    name: getDependencies()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get child dialog dependencies so they can be added to the containers
      dialogset.
    syntax:
      content: function getDependencies()
      parameters: []
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.getExpression
    name: getExpression(ExpressionParserInterface)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getExpression(parser: ExpressionParserInterface)'
      parameters:
        - id: parser
          type:
            - ExpressionParserInterface
          description: ''
      return:
        type:
          - Expression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Id for condition.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.constructor
    name: 'OnActivity(string, Dialog[], string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new OnActivity(type?: string, actions?: Dialog[], condition?: string)'
      parameters:
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: actions
          type:
            - 'Dialog[]'
          description: ''
          optional: true
        - id: condition
          type:
            - string
          description: ''
          optional: true
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.priority
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Get or sets the rule priority expression where 0 is the highest and less
      than 0 is ignored.
    syntax:
      content: 'priority: IntExpression'
      return:
        type:
          - IntExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.runOnce
    name: runOnce
    fullName: runOnce
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether rule should only run once per unique set of
      memory paths.
    syntax:
      content: 'runOnce: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnActivity.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets the ActivityType which must be matched for this to trigger.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: botbuilder-dialogs-adaptive.OnDialogEvent
    name: OnDialogEvent
    spec.typeScript:
      - name: OnDialogEvent
        fullName: OnDialogEvent
        uid: botbuilder-dialogs-adaptive.OnDialogEvent
  - uid: botbuilder-dialogs-adaptive.ActionContext
    name: ActionContext
    spec.typeScript:
      - name: ActionContext
        fullName: ActionContext
        uid: botbuilder-dialogs-adaptive.ActionContext
  - uid: 'Promise<botbuilder-dialogs-adaptive.ActionChangeList[]>'
    name: 'ActionChangeList[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ActionChangeList
        fullName: ActionChangeList
        uid: botbuilder-dialogs-adaptive.ActionChangeList
      - name: '[]>'
        fullName: '[]>'
