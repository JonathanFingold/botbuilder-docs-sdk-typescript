### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent
    name: OnUnknownIntent
    fullName: OnUnknownIntent
    children:
      - botbuilder-dialogs-adaptive.OnUnknownIntent.actions
      - botbuilder-dialogs-adaptive.OnUnknownIntent.addExternalCondition
      - botbuilder-dialogs-adaptive.OnUnknownIntent.condition
      - botbuilder-dialogs-adaptive.OnUnknownIntent.currentPriority
      - botbuilder-dialogs-adaptive.OnUnknownIntent.event
      - botbuilder-dialogs-adaptive.OnUnknownIntent.execute
      - botbuilder-dialogs-adaptive.OnUnknownIntent.getDependencies
      - botbuilder-dialogs-adaptive.OnUnknownIntent.getExpression
      - botbuilder-dialogs-adaptive.OnUnknownIntent.id
      - botbuilder-dialogs-adaptive.OnUnknownIntent.constructor
      - botbuilder-dialogs-adaptive.OnUnknownIntent.priority
      - botbuilder-dialogs-adaptive.OnUnknownIntent.runOnce
    langs:
      - typeScript
    type: class
    summary: >-
      Actions triggered when a UnknownIntent event has been emitted by the
      recognizer.
    extends:
      name: botbuilder-dialogs-adaptive.OnDialogEvent
    package: botbuilder-dialogs-adaptive
    remarks: >-
      A message is considered unhandled if there were no other conditions
      triggered by the message and

      there is no active plan being executed.

      This trigger is run when the utterance is not recognized and the fallback
      consultation is happening

      It will only trigger if and when
       * it is the leaf dialog AND
       * none of the parent dialogs handle the event
      This provides the parent dialogs the opportunity to handle global commands
      as fallback interruption.
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.actions
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the actions to add to the plan when the rule constraints are
      met.
    syntax:
      content: 'actions: Dialog[]'
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.addExternalCondition
    name: addExternalCondition(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add external condition to the OnCondition
    syntax:
      content: 'function addExternalCondition(condition: string)'
      parameters:
        - id: condition
          type:
            - string
          description: >
            External constraint to add, it will be AND'ed to all other
            constraints.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.condition
    name: condition
    fullName: condition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the condition which needs to be met for the actions to be
      executed (OPTIONAL).
    syntax:
      content: 'condition: BoolExpression'
      return:
        type:
          - BoolExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.currentPriority
    name: currentPriority(ActionContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Compute the current value of the priority expression and return it.
    syntax:
      content: 'function currentPriority(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type:
            - botbuilder-dialogs-adaptive.ActionContext
          description: Context to use for evaluation.
      return:
        type:
          - number
        description: Computed priority.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.event
    name: event
    fullName: event
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets the event to fire on.
    syntax:
      content: 'event: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.execute
    name: execute(ActionContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: Method called to execute the condition's actions.
    syntax:
      content: 'function execute(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type:
            - botbuilder-dialogs-adaptive.ActionContext
          description: Context.
      return:
        type:
          - 'Promise<botbuilder-dialogs-adaptive.ActionChangeList[]>'
        description: A promise with plan change list.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.getDependencies
    name: getDependencies()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get child dialog dependencies so they can be added to the containers
      dialogset.
    syntax:
      content: function getDependencies()
      parameters: []
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.getExpression
    name: getExpression(ExpressionParserInterface)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getExpression(parser: ExpressionParserInterface)'
      parameters:
        - id: parser
          type:
            - ExpressionParserInterface
          description: ''
      return:
        type:
          - Expression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Id for condition.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.constructor
    name: 'OnUnknownIntent(Dialog[], string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new `OnUnknownIntent` instance.
    syntax:
      content: 'new OnUnknownIntent(actions?: Dialog[], condition?: string)'
      parameters:
        - id: actions
          type:
            - 'Dialog[]'
          description: >-
            (Optional) The actions to add to the plan when the rule constraints
            are met.
          optional: true
        - id: condition
          type:
            - string
          description: >
            (Optional) The condition which needs to be met for the actions to be
            executed.
          optional: true
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.priority
    name: priority
    fullName: priority
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Get or sets the rule priority expression where 0 is the highest and less
      than 0 is ignored.
    syntax:
      content: 'priority: IntExpression'
      return:
        type:
          - IntExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.OnUnknownIntent.runOnce
    name: runOnce
    fullName: runOnce
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether rule should only run once per unique set of
      memory paths.
    syntax:
      content: 'runOnce: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: botbuilder-dialogs-adaptive.OnDialogEvent
    name: OnDialogEvent
    spec.typeScript:
      - name: OnDialogEvent
        fullName: OnDialogEvent
        uid: botbuilder-dialogs-adaptive.OnDialogEvent
  - uid: botbuilder-dialogs-adaptive.ActionContext
    name: ActionContext
    spec.typeScript:
      - name: ActionContext
        fullName: ActionContext
        uid: botbuilder-dialogs-adaptive.ActionContext
  - uid: 'Promise<botbuilder-dialogs-adaptive.ActionChangeList[]>'
    name: 'ActionChangeList[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ActionChangeList
        fullName: ActionChangeList
        uid: botbuilder-dialogs-adaptive.ActionChangeList
      - name: '[]>'
        fullName: '[]>'
