### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer
    name: QnAMakerRecognizer
    fullName: QnAMakerRecognizer
    children:
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.context
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.endpointKey
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.hostname
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.id
      - >-
        botbuilder-dialogs-adaptive.QnAMakerRecognizer.includeDialogNameInMetadata
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.isTest
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.knowledgeBaseId
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.metadata
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.qnaId
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.constructor
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.qnaMatchIntent
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.rankerType
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.recognize
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.threshold
      - botbuilder-dialogs-adaptive.QnAMakerRecognizer.top
    langs:
      - typeScript
    type: class
    summary: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.context
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: An expression to evaluate to set the context.
    syntax:
      content: 'context: ObjectExpression<QnARequestContext>'
      return:
        type:
          - ObjectExpression<QnARequestContext>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.endpointKey
    name: endpointKey
    fullName: endpointKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Endpoint key for the QnA service.
    syntax:
      content: 'endpointKey: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.hostname
    name: hostname
    fullName: hostname
    children: []
    langs:
      - typeScript
    type: property
    summary: Host name of the QnA maker knowledgebase.
    syntax:
      content: 'hostname: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Id of the recognizer.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.includeDialogNameInMetadata
    name: includeDialogNameInMetadata
    fullName: includeDialogNameInMetadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether to include the dialog name metadata for QnA context.
    syntax:
      content: 'includeDialogNameInMetadata: BoolExpression'
      return:
        type:
          - BoolExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.isTest
    name: isTest
    fullName: isTest
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to call test or prod environment of
      knowledgebase.
    syntax:
      content: 'isTest: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.knowledgeBaseId
    name: knowledgeBaseId
    fullName: knowledgeBaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: Knowledgebase id of your QnA maker knowledgebase.
    syntax:
      content: 'knowledgeBaseId: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: An expression to evaluate to set additional metadata name value pairs.
    syntax:
      content: 'metadata: ArrayExpression<QnAMakerMetadata>'
      return:
        type:
          - ArrayExpression<QnAMakerMetadata>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.qnaId
    name: qnaId
    fullName: qnaId
    children: []
    langs:
      - typeScript
    type: property
    summary: An expression to evaluate to set QnAId parameter.
    syntax:
      content: 'qnaId: IntExpression'
      return:
        type:
          - IntExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.constructor
    name: 'QnAMakerRecognizer(string, string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new QnAMakerRecognizer(hostname?: string, knowledgeBaseId?: string,
        endpointKey?: string)
      parameters:
        - id: hostname
          type:
            - string
          description: ''
          optional: true
        - id: knowledgeBaseId
          type:
            - string
          description: ''
          optional: true
        - id: endpointKey
          type:
            - string
          description: ''
          optional: true
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.qnaMatchIntent
    name: qnaMatchIntent
    fullName: qnaMatchIntent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static qnaMatchIntent: "QnAMatch" = "QnAMatch"'
      return:
        type:
          - '"QnAMatch"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.rankerType
    name: rankerType
    fullName: rankerType
    children: []
    langs:
      - typeScript
    type: property
    summary: Desired RankerType.
    syntax:
      content: 'rankerType: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.recognize
    name: 'recognize(DialogContext, Activity)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognize(dc: DialogContext, activity: Activity)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
      return:
        type:
          - Promise<RecognizerResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.threshold
    name: threshold
    fullName: threshold
    children: []
    langs:
      - typeScript
    type: property
    summary: Threshold for the results.
    syntax:
      content: 'threshold: NumberExpression'
      return:
        type:
          - NumberExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.QnAMakerRecognizer.top
    name: top
    fullName: top
    children: []
    langs:
      - typeScript
    type: property
    summary: Number of results you want.
    syntax:
      content: 'top: IntExpression'
      return:
        type:
          - IntExpression
        description: ''
    package: botbuilder-dialogs-adaptive
