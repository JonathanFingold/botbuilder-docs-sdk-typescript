### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGFileParserVisitor
    name: LGFileParserVisitor
    fullName: LGFileParserVisitor<Result>
    children:
      - botbuilder-lg.LGFileParserVisitor.visit
      - botbuilder-lg.LGFileParserVisitor.visitChildren
      - botbuilder-lg.LGFileParserVisitor.visitCommentDefinition
      - botbuilder-lg.LGFileParserVisitor.visitErrorDefinition
      - botbuilder-lg.LGFileParserVisitor.visitErrorNode
      - botbuilder-lg.LGFileParserVisitor.visitFile
      - botbuilder-lg.LGFileParserVisitor.visitImportDefinition
      - botbuilder-lg.LGFileParserVisitor.visitOptionDefinition
      - botbuilder-lg.LGFileParserVisitor.visitParagraph
      - botbuilder-lg.LGFileParserVisitor.visitTemplateBody
      - botbuilder-lg.LGFileParserVisitor.visitTemplateBodyLine
      - botbuilder-lg.LGFileParserVisitor.visitTemplateDefinition
      - botbuilder-lg.LGFileParserVisitor.visitTemplateNameLine
      - botbuilder-lg.LGFileParserVisitor.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: >-
      This interface defines a complete generic visitor for a parse tree
      produced

      by `LGFileParser`.
    extends:
      name: ParseTreeVisitor<Result>
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visit
    name: visit(ParseTree)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a parse tree, and return a user-defined result of the operation.'
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type:
            - ParseTree
          description: 'The <xref:ParseTree> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the parse tree.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitChildren
    name: visitChildren(RuleNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visit the children of a node, and return a user-defined result
      of the operation.
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type:
            - RuleNode
          description: 'The <xref:RuleNode> whose children should be visited.'
      return:
        type:
          - Result
        description: The result of visiting the children of the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitCommentDefinition
    name: visitCommentDefinition
    fullName: visitCommentDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.commentDefinition`.
    optional: true
    syntax:
      content: 'visitCommentDefinition?: (ctx: CommentDefinitionContext) => Result'
      return:
        type:
          - '(ctx: CommentDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitErrorDefinition
    name: visitErrorDefinition
    fullName: visitErrorDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.errorDefinition`.
    optional: true
    syntax:
      content: 'visitErrorDefinition?: (ctx: ErrorDefinitionContext) => Result'
      return:
        type:
          - '(ctx: ErrorDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitErrorNode
    name: visitErrorNode(ErrorNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit an error node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type:
            - ErrorNode
          description: 'The <xref:ErrorNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitFile
    name: visitFile
    fullName: visitFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'visitFile?: (ctx: FileContext) => Result'
      return:
        type:
          - '(ctx: FileContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitImportDefinition
    name: visitImportDefinition
    fullName: visitImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'visitImportDefinition?: (ctx: ImportDefinitionContext) => Result'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitOptionDefinition
    name: visitOptionDefinition
    fullName: visitOptionDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.optionDefinition`.
    optional: true
    syntax:
      content: 'visitOptionDefinition?: (ctx: OptionDefinitionContext) => Result'
      return:
        type:
          - '(ctx: OptionDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitParagraph
    name: visitParagraph
    fullName: visitParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'visitParagraph?: (ctx: ParagraphContext) => Result'
      return:
        type:
          - '(ctx: ParagraphContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateBody
    name: visitTemplateBody
    fullName: visitTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'visitTemplateBody?: (ctx: TemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: TemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateBodyLine
    name: visitTemplateBodyLine
    fullName: visitTemplateBodyLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateBodyLine`.
    optional: true
    syntax:
      content: 'visitTemplateBodyLine?: (ctx: TemplateBodyLineContext) => Result'
      return:
        type:
          - '(ctx: TemplateBodyLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateDefinition
    name: visitTemplateDefinition
    fullName: visitTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'visitTemplateDefinition?: (ctx: TemplateDefinitionContext) => Result'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTemplateNameLine
    name: visitTemplateNameLine
    fullName: visitTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'visitTemplateNameLine?: (ctx: TemplateNameLineContext) => Result'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserVisitor.visitTerminal
    name: visitTerminal(TerminalNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a terminal node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type:
            - TerminalNode
          description: 'The <xref:TerminalNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
