### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGFileParserListener
    name: LGFileParserListener
    fullName: LGFileParserListener
    children:
      - botbuilder-lg.LGFileParserListener.enterCommentDefinition
      - botbuilder-lg.LGFileParserListener.enterErrorDefinition
      - botbuilder-lg.LGFileParserListener.enterEveryRule
      - botbuilder-lg.LGFileParserListener.enterFile
      - botbuilder-lg.LGFileParserListener.enterImportDefinition
      - botbuilder-lg.LGFileParserListener.enterOptionDefinition
      - botbuilder-lg.LGFileParserListener.enterParagraph
      - botbuilder-lg.LGFileParserListener.enterTemplateBody
      - botbuilder-lg.LGFileParserListener.enterTemplateBodyLine
      - botbuilder-lg.LGFileParserListener.enterTemplateDefinition
      - botbuilder-lg.LGFileParserListener.enterTemplateNameLine
      - botbuilder-lg.LGFileParserListener.exitCommentDefinition
      - botbuilder-lg.LGFileParserListener.exitErrorDefinition
      - botbuilder-lg.LGFileParserListener.exitEveryRule
      - botbuilder-lg.LGFileParserListener.exitFile
      - botbuilder-lg.LGFileParserListener.exitImportDefinition
      - botbuilder-lg.LGFileParserListener.exitOptionDefinition
      - botbuilder-lg.LGFileParserListener.exitParagraph
      - botbuilder-lg.LGFileParserListener.exitTemplateBody
      - botbuilder-lg.LGFileParserListener.exitTemplateBodyLine
      - botbuilder-lg.LGFileParserListener.exitTemplateDefinition
      - botbuilder-lg.LGFileParserListener.exitTemplateNameLine
      - botbuilder-lg.LGFileParserListener.visitErrorNode
      - botbuilder-lg.LGFileParserListener.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: |-
      This interface defines a complete listener for a parse tree produced by
      `LGFileParser`.
    extends:
      name: ParseTreeListener
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterCommentDefinition
    name: enterCommentDefinition
    fullName: enterCommentDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.commentDefinition`.
    optional: true
    syntax:
      content: 'enterCommentDefinition?: (ctx: CommentDefinitionContext) => void'
      return:
        type:
          - '(ctx: CommentDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterErrorDefinition
    name: enterErrorDefinition
    fullName: enterErrorDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.errorDefinition`.
    optional: true
    syntax:
      content: 'enterErrorDefinition?: (ctx: ErrorDefinitionContext) => void'
      return:
        type:
          - '(ctx: ErrorDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterEveryRule
    name: enterEveryRule
    fullName: enterEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enterEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterFile
    name: enterFile
    fullName: enterFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'enterFile?: (ctx: FileContext) => void'
      return:
        type:
          - '(ctx: FileContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterImportDefinition
    name: enterImportDefinition
    fullName: enterImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'enterImportDefinition?: (ctx: ImportDefinitionContext) => void'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterOptionDefinition
    name: enterOptionDefinition
    fullName: enterOptionDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.optionDefinition`.
    optional: true
    syntax:
      content: 'enterOptionDefinition?: (ctx: OptionDefinitionContext) => void'
      return:
        type:
          - '(ctx: OptionDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterParagraph
    name: enterParagraph
    fullName: enterParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'enterParagraph?: (ctx: ParagraphContext) => void'
      return:
        type:
          - '(ctx: ParagraphContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateBody
    name: enterTemplateBody
    fullName: enterTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'enterTemplateBody?: (ctx: TemplateBodyContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateBodyLine
    name: enterTemplateBodyLine
    fullName: enterTemplateBodyLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateBodyLine`.
    optional: true
    syntax:
      content: 'enterTemplateBodyLine?: (ctx: TemplateBodyLineContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateDefinition
    name: enterTemplateDefinition
    fullName: enterTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'enterTemplateDefinition?: (ctx: TemplateDefinitionContext) => void'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.enterTemplateNameLine
    name: enterTemplateNameLine
    fullName: enterTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'enterTemplateNameLine?: (ctx: TemplateNameLineContext) => void'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitCommentDefinition
    name: exitCommentDefinition
    fullName: exitCommentDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.commentDefinition`.
    optional: true
    syntax:
      content: 'exitCommentDefinition?: (ctx: CommentDefinitionContext) => void'
      return:
        type:
          - '(ctx: CommentDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitErrorDefinition
    name: exitErrorDefinition
    fullName: exitErrorDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.errorDefinition`.
    optional: true
    syntax:
      content: 'exitErrorDefinition?: (ctx: ErrorDefinitionContext) => void'
      return:
        type:
          - '(ctx: ErrorDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitEveryRule
    name: exitEveryRule
    fullName: exitEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exitEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitFile
    name: exitFile
    fullName: exitFile
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.file`.
    optional: true
    syntax:
      content: 'exitFile?: (ctx: FileContext) => void'
      return:
        type:
          - '(ctx: FileContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitImportDefinition
    name: exitImportDefinition
    fullName: exitImportDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.importDefinition`.
    optional: true
    syntax:
      content: 'exitImportDefinition?: (ctx: ImportDefinitionContext) => void'
      return:
        type:
          - '(ctx: ImportDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitOptionDefinition
    name: exitOptionDefinition
    fullName: exitOptionDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.optionDefinition`.
    optional: true
    syntax:
      content: 'exitOptionDefinition?: (ctx: OptionDefinitionContext) => void'
      return:
        type:
          - '(ctx: OptionDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitParagraph
    name: exitParagraph
    fullName: exitParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.paragraph`.
    optional: true
    syntax:
      content: 'exitParagraph?: (ctx: ParagraphContext) => void'
      return:
        type:
          - '(ctx: ParagraphContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateBody
    name: exitTemplateBody
    fullName: exitTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateBody`.
    optional: true
    syntax:
      content: 'exitTemplateBody?: (ctx: TemplateBodyContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateBodyLine
    name: exitTemplateBodyLine
    fullName: exitTemplateBodyLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateBodyLine`.
    optional: true
    syntax:
      content: 'exitTemplateBodyLine?: (ctx: TemplateBodyLineContext) => void'
      return:
        type:
          - '(ctx: TemplateBodyLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateDefinition
    name: exitTemplateDefinition
    fullName: exitTemplateDefinition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateDefinition`.
    optional: true
    syntax:
      content: 'exitTemplateDefinition?: (ctx: TemplateDefinitionContext) => void'
      return:
        type:
          - '(ctx: TemplateDefinitionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.exitTemplateNameLine
    name: exitTemplateNameLine
    fullName: exitTemplateNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGFileParser.templateNameLine`.
    optional: true
    syntax:
      content: 'exitTemplateNameLine?: (ctx: TemplateNameLineContext) => void'
      return:
        type:
          - '(ctx: TemplateNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.visitErrorNode
    name: visitErrorNode
    fullName: visitErrorNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitErrorNode?: (node: ErrorNode) => void'
      return:
        type:
          - '(node: ErrorNode) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGFileParserListener.visitTerminal
    name: visitTerminal
    fullName: visitTerminal
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitTerminal?: (node: TerminalNode) => void'
      return:
        type:
          - '(node: TerminalNode) => void'
        description: ''
    package: botbuilder-lg
