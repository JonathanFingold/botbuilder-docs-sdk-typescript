### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.MultiLanguageLG
    name: MultiLanguageLG
    fullName: MultiLanguageLG
    children:
      - botbuilder-lg.MultiLanguageLG.generate
      - botbuilder-lg.MultiLanguageLG.languageFallbackPolicy
      - botbuilder-lg.MultiLanguageLG.lgPerLocale
      - botbuilder-lg.MultiLanguageLG.constructor
    langs:
      - typeScript
    type: class
    summary: |-
      Copyright (c) Microsoft Corporation. All rights reserved.
      Licensed under the MIT License.
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.generate
    name: 'generate(string, object, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generate(template: string, data?: object, locale?: string)'
      parameters:
        - id: template
          type:
            - string
          description: ''
        - id: data
          type:
            - object
          description: ''
          optional: true
        - id: locale
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.languageFallbackPolicy
    name: languageFallbackPolicy
    fullName: languageFallbackPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'languageFallbackPolicy: __type'
      return:
        type:
          - __type
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.lgPerLocale
    name: lgPerLocale
    fullName: lgPerLocale
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'lgPerLocale: Map<string, Templates>'
      return:
        type:
          - 'Map<string, botbuilder-lg.Templates>'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.constructor
    name: 'MultiLanguageLG(Map<string, string>)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MultiLanguageLG(localeLGFiles: Map<string, string>)'
      parameters:
        - id: localeLGFiles
          type:
            - 'Map<string, string>'
          description: ''
    package: botbuilder-lg
references:
  - uid: 'Map<string, botbuilder-lg.Templates>'
    name: Templates>
    spec.typeScript:
      - name: 'Map<string, '
        fullName: 'Map<string, '
      - name: Templates
        fullName: Templates
        uid: botbuilder-lg.Templates
      - name: '>'
        fullName: '>'
