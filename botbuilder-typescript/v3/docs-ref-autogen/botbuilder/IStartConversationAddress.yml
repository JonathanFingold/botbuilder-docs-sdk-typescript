### YamlMime:UniversalReference
items:
  - uid: botbuilder.IStartConversationAddress
    name: IStartConversationAddress
    fullName: IStartConversationAddress
    children:
      - botbuilder.IStartConversationAddress.activity
      - botbuilder.IStartConversationAddress.channelData
      - botbuilder.IStartConversationAddress.isGroup
      - botbuilder.IStartConversationAddress.members
      - botbuilder.IStartConversationAddress.topicName
    langs:
      - typeScript
    type: interface
    summary: >-
      Additional properties that can be passed in with the address to
      [UniversalBot.beginDialog()](/en-us/node/builder/chat-reference/classes/_botbuilder_d_.universalbot#begindialog).
    extends:
      name: botbuilder.IChatConnectorAddress
    package: botbuilder
  - uid: botbuilder.IStartConversationAddress.activity
    name: activity
    fullName: activity
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) when creating a new conversation, use this activity as the
      initial message to the conversation.
    optional: true
    syntax:
      content: 'activity?: any'
      return:
        type:
          - any
    package: botbuilder
  - uid: botbuilder.IStartConversationAddress.channelData
    name: channelData
    fullName: channelData
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) channel specific payload for creating the conversation.
    optional: true
    syntax:
      content: 'channelData?: any'
      return:
        type:
          - any
    package: botbuilder
  - uid: botbuilder.IStartConversationAddress.isGroup
    name: isGroup
    fullName: isGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) if true the conversation should be a group conversation.
    optional: true
    syntax:
      content: 'isGroup?: boolean'
      return:
        type:
          - boolean
    package: botbuilder
  - uid: botbuilder.IStartConversationAddress.members
    name: members
    fullName: members
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) members to add to the conversation. If missing, the
      conversation will be started with the [user](#user).
    optional: true
    syntax:
      content: 'members?: IIdentity[]'
      return:
        type:
          - 'botbuilder.IIdentity[]'
    package: botbuilder
  - uid: botbuilder.IStartConversationAddress.topicName
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) topic of the conversation (if supported by the channel)
    optional: true
    syntax:
      content: 'topicName?: string'
      return:
        type:
          - string
    package: botbuilder
references:
  - uid: botbuilder.IChatConnectorAddress
    name: IChatConnectorAddress
    spec.typeScript:
      - name: IChatConnectorAddress
        fullName: IChatConnectorAddress
        uid: botbuilder.IChatConnectorAddress
  - uid: 'botbuilder.IIdentity[]'
    name: 'IIdentity[]'
    spec.typeScript:
      - name: IIdentity
        fullName: IIdentity
        uid: botbuilder.IIdentity
      - name: '[]'
        fullName: '[]'
