### YamlMime:UniversalReference
items:
  - uid: botbuilder.IPromptOptions
    name: IPromptOptions
    fullName: IPromptOptions
    children:
      - botbuilder.IPromptOptions.attachmentLayout
      - botbuilder.IPromptOptions.attachments
      - botbuilder.IPromptOptions.entities
      - botbuilder.IPromptOptions.inputHint
      - botbuilder.IPromptOptions.libraryNamespace
      - botbuilder.IPromptOptions.listStyle
      - botbuilder.IPromptOptions.localizationNamespace
      - botbuilder.IPromptOptions.maxRetries
      - botbuilder.IPromptOptions.prompt
      - botbuilder.IPromptOptions.promptAfterAction
      - botbuilder.IPromptOptions.refDate
      - botbuilder.IPromptOptions.retryPrompt
      - botbuilder.IPromptOptions.retrySpeak
      - botbuilder.IPromptOptions.speak
      - botbuilder.IPromptOptions.textFormat
    langs:
      - typeScript
    type: interface
    summary: >-
      Options passed to the [built-in
      prompts](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.__global.iprompts).
    extends:
      name: botbuilder.IMessageOptions
    package: botbuilder
  - uid: botbuilder.IPromptOptions.attachmentLayout
    name: attachmentLayout
    fullName: attachmentLayout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Hint for how clients should layout multiple attachments. The default value
      is 'list'.
    optional: true
    syntax:
      content: 'attachmentLayout?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.attachments
    name: attachments
    fullName: attachments
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For incoming messages contains attachments like images sent from the user.
      For outgoing messages contains objects like cards or images to send to the
      user.
    optional: true
    syntax:
      content: 'attachments?: IAttachment[]'
      return:
        type:
          - 'botbuilder.IAttachment[]'
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.entities
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: Structured objects passed to the bot or user.
    optional: true
    syntax:
      content: 'entities?: any[]'
      return:
        type:
          - 'any[]'
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.inputHint
    name: inputHint
    fullName: inputHint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Hint for clients letting them know if the bot is expecting further input
      or not. The built-in prompts will automatically populate this value for
      outgoing messages.
    optional: true
    syntax:
      content: 'inputHint?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.libraryNamespace
    name: libraryNamespace
    fullName: libraryNamespace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) namespace to use for localization and other purposes. This
      defaults to the callers namespace.
    optional: true
    syntax:
      content: 'libraryNamespace?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.listStyle
    name: listStyle
    fullName: listStyle
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) type of list to render for PromptType.choice. Default value is
      ListStyle.auto.
    optional: true
    syntax:
      content: 'listStyle?: ListStyle'
      return:
        type:
          - botbuilder.ListStyle
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.localizationNamespace
    name: localizationNamespace
    fullName: localizationNamespace
    children: []
    langs:
      - typeScript
    type: property
    summary: '__DEPRECATED__ use [libraryNamespace](#librarynamespace) instead.'
    optional: true
    syntax:
      content: 'localizationNamespace?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.maxRetries
    name: maxRetries
    fullName: maxRetries
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) maximum number of times to re-prompt the user. By default the
      user will be re-prompted indefinitely.
    optional: true
    syntax:
      content: 'maxRetries?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.prompt
    name: prompt
    fullName: prompt
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) Initial prompt to send the user. This is typically populated by
      the `Prompts.xxx()` function.
    optional: true
    syntax:
      content: 'prompt?: TextOrMessageType'
      return:
        type:
          - botbuilder.TextOrMessageType
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.promptAfterAction
    name: promptAfterAction
    fullName: promptAfterAction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) flag used to control the re-prompting of a user after a dialog
      started by an action ends. The default value is true.
    optional: true
    syntax:
      content: 'promptAfterAction?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.refDate
    name: refDate
    fullName: refDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) reference date when recognizing times. Date expressed in ticks
      using Date.getTime().
    optional: true
    syntax:
      content: 'refDate?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.retryPrompt
    name: retryPrompt
    fullName: retryPrompt
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) retry prompt to send if the users response isn't understood.
      Default is to just

      re-prompt with a customizable system prompt.
    optional: true
    syntax:
      content: 'retryPrompt?: TextOrMessageType'
      return:
        type:
          - botbuilder.TextOrMessageType
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.retrySpeak
    name: retrySpeak
    fullName: retrySpeak
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) SSML to send with the `retryPrompt`. If the retryPrompt is of
      type `IMessage` or `IIsMessage`, this value will be ignored. If this value
      is an array a response will be chosen at random.
    optional: true
    syntax:
      content: 'retrySpeak?: TextType'
      return:
        type:
          - botbuilder.TextType
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.speak
    name: speak
    fullName: speak
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) SSML to send with the initial `prompt`. If the prompt is of
      type `IMessage` or `IIsMessage`, this value will be ignored. If this value
      is an array a response will be chosen at random.
    optional: true
    syntax:
      content: 'speak?: TextType'
      return:
        type:
          - botbuilder.TextType
        description: ''
    package: botbuilder
  - uid: botbuilder.IPromptOptions.textFormat
    name: textFormat
    fullName: textFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: Format of text fields. The default value is 'markdown'.
    optional: true
    syntax:
      content: 'textFormat?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
references:
  - uid: botbuilder.IMessageOptions
    name: IMessageOptions
    spec.typeScript:
      - name: IMessageOptions
        fullName: IMessageOptions
        uid: botbuilder.IMessageOptions
  - uid: 'botbuilder.IAttachment[]'
    name: 'IAttachment[]'
    spec.typeScript:
      - name: IAttachment
        fullName: IAttachment
        uid: botbuilder.IAttachment
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder.ListStyle
    name: ListStyle
    spec.typeScript:
      - name: ListStyle
        fullName: ListStyle
        uid: botbuilder.ListStyle
  - uid: botbuilder.TextOrMessageType
    name: TextOrMessageType
    spec.typeScript:
      - name: TextOrMessageType
        fullName: TextOrMessageType
        uid: botbuilder.TextOrMessageType
  - uid: botbuilder.TextType
    name: TextType
    spec.typeScript:
      - name: TextType
        fullName: TextType
        uid: botbuilder.TextType
