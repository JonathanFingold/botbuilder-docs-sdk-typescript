### YamlMime:UniversalReference
items:
  - uid: botbuilder.SessionLogger
    name: SessionLogger
    fullName: SessionLogger
    children:
      - botbuilder.SessionLogger.dump
      - botbuilder.SessionLogger.error
      - botbuilder.SessionLogger.flush
      - botbuilder.SessionLogger.isEnabled
      - botbuilder.SessionLogger.log
      - botbuilder.SessionLogger.warn
    langs:
      - typeScript
    type: class
    summary: Default session logger used to log session activity to the console.
    package: botbuilder
  - uid: botbuilder.SessionLogger.dump
    name: 'dump(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Logs the state of a variable to the output.
    syntax:
      content: 'function dump(name: string, value: any)'
      parameters:
        - id: name
          type:
            - string
          description: Name of the variable being logged.
        - id: value
          type:
            - any
          description: |
            Variables current state.
    package: botbuilder
  - uid: botbuilder.SessionLogger.error
    name: 'error(IDialogState[], Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Logs an error to the output.
    syntax:
      content: 'function error(dialogStack: IDialogState[], err: Error)'
      parameters:
        - id: dialogStack
          type:
            - 'botbuilder.IDialogState[]'
          description: >-
            (Optional) dialog stack for the session. This is used to provide
            context for where the event occured.
        - id: err
          type:
            - Error
          description: >
            Error object to log. The errors message plus stack trace will be
            logged.
    package: botbuilder
  - uid: botbuilder.SessionLogger.flush
    name: 'flush((err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Flushes any buffered entries to the output.
    syntax:
      content: 'function flush(callback: (err: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err: Error) => void'
          description: |
            Function to call when the operation is completed.
    package: botbuilder
  - uid: botbuilder.SessionLogger.isEnabled
    name: isEnabled
    fullName: isEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: If true the logger is enabled and will log the sessions activity.
    syntax:
      content: 'isEnabled: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botbuilder
  - uid: botbuilder.SessionLogger.log
    name: 'log(IDialogState[], string, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Logs an informational level message to the output.
    syntax:
      content: 'function log(dialogStack: IDialogState[], msg: string, args: any[])'
      parameters:
        - id: dialogStack
          type:
            - 'botbuilder.IDialogState[]'
          description: >-
            (Optional) dialog stack for the session. This is used to provide
            context for where the event occured.
        - id: msg
          type:
            - string
          description: Message to log.
        - id: args
          type:
            - 'any[]'
          description: |
            (Optional) arguments to log with the message.
    package: botbuilder
  - uid: botbuilder.SessionLogger.warn
    name: 'warn(IDialogState[], string, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Logs a warning to the output.
    syntax:
      content: 'function warn(dialogStack: IDialogState[], msg: string, args: any[])'
      parameters:
        - id: dialogStack
          type:
            - 'botbuilder.IDialogState[]'
          description: >-
            (Optional) dialog stack for the session. This is used to provide
            context for where the event occured.
        - id: msg
          type:
            - string
          description: Message to log.
        - id: args
          type:
            - 'any[]'
          description: |
            (Optional) arguments to log with the message.
    package: botbuilder
references:
  - uid: 'botbuilder.IDialogState[]'
    name: 'IDialogState[]'
    spec.typeScript:
      - name: IDialogState
        fullName: IDialogState
        uid: botbuilder.IDialogState
      - name: '[]'
        fullName: '[]'
