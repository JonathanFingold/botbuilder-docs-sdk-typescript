### YamlMime:UniversalReference
items:
  - uid: botbuilder.IFindActionRouteContext
    name: IFindActionRouteContext
    fullName: IFindActionRouteContext
    children:
      - botbuilder.IFindActionRouteContext.conversationData
      - botbuilder.IFindActionRouteContext.dialogData
      - botbuilder.IFindActionRouteContext.dialogStack
      - botbuilder.IFindActionRouteContext.gettext
      - botbuilder.IFindActionRouteContext.intent
      - botbuilder.IFindActionRouteContext.libraryName
      - botbuilder.IFindActionRouteContext.locale
      - botbuilder.IFindActionRouteContext.localizer
      - botbuilder.IFindActionRouteContext.logger
      - botbuilder.IFindActionRouteContext.message
      - botbuilder.IFindActionRouteContext.ngettext
      - botbuilder.IFindActionRouteContext.preferredLocale
      - botbuilder.IFindActionRouteContext.privateConversationData
      - botbuilder.IFindActionRouteContext.routeType
      - botbuilder.IFindActionRouteContext.userData
    langs:
      - typeScript
    type: interface
    summary: Context passed to `ActionSet.findActionRoutes()`.
    extends:
      name: botbuilder.IRecognizeContext
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.conversationData
    name: conversationData
    fullName: conversationData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Shared conversation data that's visible to all members of the
      conversation.
    syntax:
      content: 'conversationData: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.dialogData
    name: dialogData
    fullName: dialogData
    children: []
    langs:
      - typeScript
    type: property
    summary: Data for the active dialog.
    syntax:
      content: 'dialogData: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.dialogStack
    name: dialogStack()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a copy of the current dialog stack for the session.
    syntax:
      content: function dialogStack()
      parameters: []
      return:
        type:
          - 'botbuilder.IDialogState[]'
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.gettext
    name: 'gettext(string, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Loads a localized string for the messages language. If arguments are
      passed the localized string

      will be treated as a template and formatted using
      [sprintf-js](https://github.com/alexei/sprintf.js) (see their docs for
      details.)
    syntax:
      content: 'function gettext(msgid: string, args: any[])'
      parameters:
        - id: msgid
          type:
            - string
          description: >-
            String to use as a key in the localized string table. Typically this
            will just be the english version of the string.
        - id: args
          type:
            - 'any[]'
          description: |
            (Optional) arguments used to format the final output string.
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.intent
    name: intent
    fullName: intent
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) The top intent identified for the message.
    optional: true
    syntax:
      content: 'intent?: IIntentRecognizerResult'
      return:
        type:
          - botbuilder.IIntentRecognizerResult
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.libraryName
    name: libraryName
    fullName: libraryName
    children: []
    langs:
      - typeScript
    type: property
    summary: (Optional) The name of the library passing the context is from.
    optional: true
    syntax:
      content: 'libraryName?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.locale
    name: locale
    fullName: locale
    children: []
    langs:
      - typeScript
    type: property
    summary: '__DEPRECATED__ use [preferredLocale()](#preferredlocale) instead.'
    syntax:
      content: 'locale: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.localizer
    name: localizer
    fullName: localizer
    children: []
    langs:
      - typeScript
    type: property
    summary: The localizer for the session.
    syntax:
      content: 'localizer: ILocalizer'
      return:
        type:
          - botbuilder.ILocalizer
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.logger
    name: logger
    fullName: logger
    children: []
    langs:
      - typeScript
    type: property
    summary: The current session logger.
    syntax:
      content: 'logger: SessionLogger'
      return:
        type:
          - botbuilder.SessionLogger
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.message
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The message received from the user. For bot originated messages this may
      only contain the "to" & "from" fields.
    syntax:
      content: 'message: IMessage'
      return:
        type:
          - botbuilder.IMessage
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.ngettext
    name: 'ngettext(string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Loads the plural form of a localized string for the messages language. The
      output string will be formatted to

      include the count by replacing %d in the string with the count.
    syntax:
      content: 'function ngettext(msgid: string, msgid_plural: string, count: number)'
      parameters:
        - id: msgid
          type:
            - string
          description: >-
            Singular form of the string to use as a key in the localized string
            table. Use %d to specify where the count should go.
        - id: msgid_plural
          type:
            - string
          description: >-
            Plural form of the string to use as a key in the localized string
            table. Use %d to specify where the count should go.
        - id: count
          type:
            - number
          description: >
            Count to use when determining whether the singular or plural form of
            the string should be used.
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.preferredLocale
    name: preferredLocale()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the users preferred locale.
    syntax:
      content: function preferredLocale()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.privateConversationData
    name: privateConversationData
    fullName: privateConversationData
    children: []
    langs:
      - typeScript
    type: property
    summary: Private conversation data that's only visible to the user.
    syntax:
      content: 'privateConversationData: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.routeType
    name: routeType
    fullName: routeType
    children: []
    langs:
      - typeScript
    type: property
    summary: The type of route being searched for.
    syntax:
      content: 'routeType: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IFindActionRouteContext.userData
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: Data for the user that's persisted across all conversations with the bot.
    syntax:
      content: 'userData: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder
references:
  - uid: botbuilder.IRecognizeContext
    name: IRecognizeContext
    spec.typeScript:
      - name: IRecognizeContext
        fullName: IRecognizeContext
        uid: botbuilder.IRecognizeContext
  - uid: botbuilder.IIntentRecognizerResult
    name: IIntentRecognizerResult
    spec.typeScript:
      - name: IIntentRecognizerResult
        fullName: IIntentRecognizerResult
        uid: botbuilder.IIntentRecognizerResult
  - uid: botbuilder.ILocalizer
    name: ILocalizer
    spec.typeScript:
      - name: ILocalizer
        fullName: ILocalizer
        uid: botbuilder.ILocalizer
  - uid: botbuilder.SessionLogger
    name: SessionLogger
    spec.typeScript:
      - name: SessionLogger
        fullName: SessionLogger
        uid: botbuilder.SessionLogger
  - uid: botbuilder.IMessage
    name: IMessage
    spec.typeScript:
      - name: IMessage
        fullName: IMessage
        uid: botbuilder.IMessage
  - uid: 'botbuilder.IDialogState[]'
    name: 'IDialogState[]'
    spec.typeScript:
      - name: IDialogState
        fullName: IDialogState
        uid: botbuilder.IDialogState
      - name: '[]'
        fullName: '[]'
