### YamlMime:UniversalReference
items:
  - uid: botbuilder.IContactRelationUpdate
    name: IContactRelationUpdate
    fullName: IContactRelationUpdate
    children:
      - botbuilder.IContactRelationUpdate.action
      - botbuilder.IContactRelationUpdate.address
      - botbuilder.IContactRelationUpdate.agent
      - botbuilder.IContactRelationUpdate.replyToId
      - botbuilder.IContactRelationUpdate.source
      - botbuilder.IContactRelationUpdate.sourceEvent
      - botbuilder.IContactRelationUpdate.type
      - botbuilder.IContactRelationUpdate.user
    langs:
      - typeScript
    type: interface
    summary: |-
      A user has updated their contact list.
      /**
      A user has updated their contact list.
    extends:
      name: botbuilder.IEvent
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.action
    name: action
    fullName: action
    children: []
    langs:
      - typeScript
    type: property
    summary: The action taken. Valid values are "add" or "remove".
    syntax:
      content: 'action: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.address
    name: address
    fullName: address
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Address routing information for the event. Save this field to external
      storage somewhere to later compose a proactive message to the user.
    syntax:
      content: 'address: IAddress'
      return:
        type:
          - botbuilder.IAddress
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.agent
    name: agent
    fullName: agent
    children: []
    langs:
      - typeScript
    type: property
    summary: SDK thats processing the event. Will always be 'botbuilder'.
    syntax:
      content: 'agent: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.replyToId
    name: replyToId
    fullName: replyToId
    children: []
    langs:
      - typeScript
    type: property
    summary: The ID of the event this update is related to.
    optional: true
    syntax:
      content: 'replyToId?: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.source
    name: source
    fullName: source
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The original source of the event (i.e. ''facebook'', ''skype'', ''slack'', etc.)'
    syntax:
      content: 'source: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.sourceEvent
    name: sourceEvent
    fullName: sourceEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The original event in the sources native schema. For outgoing messages can
      be used to pass source specific event data like custom attachments.
    syntax:
      content: 'sourceEvent: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines type of event. Should be 'message' for an IMessage.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder
  - uid: botbuilder.IContactRelationUpdate.user
    name: user
    fullName: user
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For incoming messages this is the user that sent the message. By default
      this is a copy of
      [address.user](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.iaddress.html#user)
      but you can configure your bot with a

      [lookupUser](/en-us/node/builder/chat-reference/interfaces/_botbuilder_d_.iuniversalbotsettings.html#lookupuser)
      function that lets map the incoming user to an internal user id.
    syntax:
      content: 'user: IIdentity'
      return:
        type:
          - botbuilder.IIdentity
        description: ''
    package: botbuilder
references:
  - uid: botbuilder.IEvent
    name: IEvent
    spec.typeScript:
      - name: IEvent
        fullName: IEvent
        uid: botbuilder.IEvent
  - uid: botbuilder.IAddress
    name: IAddress
    spec.typeScript:
      - name: IAddress
        fullName: IAddress
        uid: botbuilder.IAddress
  - uid: botbuilder.IIdentity
    name: IIdentity
    spec.typeScript:
      - name: IIdentity
        fullName: IIdentity
        uid: botbuilder.IIdentity
