### YamlMime:UniversalReference
items:
  - uid: botbuilder-calling.RecognizeAction
    name: RecognizeAction
    fullName: RecognizeAction
    children:
      - botbuilder-calling.RecognizeAction.bargeInAllowed
      - botbuilder-calling.RecognizeAction.choices
      - botbuilder-calling.RecognizeAction.collectDigits
      - botbuilder-calling.RecognizeAction.culture
      - botbuilder-calling.RecognizeAction.initialSilenceTimeoutInSeconds
      - botbuilder-calling.RecognizeAction.interdigitTimeoutInSeconds
      - botbuilder-calling.RecognizeAction.playPrompt
      - botbuilder-calling.RecognizeAction.constructor
      - botbuilder-calling.RecognizeAction.toAction
    langs:
      - typeScript
    type: class
    summary: >-
      Action builder class designed to simplify building [recognize
      actions](/en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.irecognizeaction).
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.bargeInAllowed
    name: bargeInAllowed(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Indicates if Skype user is allowed to enter choice before the prompt
      finishes. The default value is true.
    syntax:
      content: 'function bargeInAllowed(flag: boolean)'
      parameters:
        - id: flag
          type:
            - boolean
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.choices
    name: 'choices(IRecognitionChoice[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List of RecognitionOption objects dictating the recognizable choices.
      Choices can be speech or dial pad digit based. Either
      [collectDigits](#collectDigits) or [choices](#choices) must be specified,
      but not both.
    syntax:
      content: 'function choices(list: IRecognitionChoice[])'
      parameters:
        - id: list
          type:
            - 'botbuilder-calling.IRecognitionChoice[]'
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.collectDigits
    name: collectDigits(ICollectDigits)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      CollectDigits will result in collecting digits from Skype user dial pad as
      part of recognize. Either [collectDigits](#collectDigits) or
      [choices](#choices) must be specified, but not both.
    syntax:
      content: 'function collectDigits(options: ICollectDigits)'
      parameters:
        - id: options
          type:
            - botbuilder-calling.ICollectDigits
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.culture
    name: culture(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Culture is an enum indicating what culture the speech recognizer should
      use. The default value is “en-US”. Currently the only culture supported is
      en-US.
    syntax:
      content: 'function culture(locale: string)'
      parameters:
        - id: locale
          type:
            - string
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.initialSilenceTimeoutInSeconds
    name: initialSilenceTimeoutInSeconds(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Maximum initial silence allowed before failing the operation from the time
      we start the recording. The default value is 5 seconds.
    syntax:
      content: 'function initialSilenceTimeoutInSeconds(time: number)'
      parameters:
        - id: time
          type:
            - number
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.interdigitTimeoutInSeconds
    name: interdigitTimeoutInSeconds(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Maximum allowed time between dial pad digits. The default value is 1
      second.
    syntax:
      content: 'function interdigitTimeoutInSeconds(time: number)'
      parameters:
        - id: time
          type:
            - number
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.playPrompt
    name: playPrompt(IAction | IIsAction)
    children: []
    type: method
    langs:
      - typeScript
    summary: A prompt to be played before the recognition starts.
    syntax:
      content: 'function playPrompt(action: IAction | IIsAction)'
      parameters:
        - id: action
          type:
            - botbuilder-calling.IAction | botbuilder-calling.IIsAction
          description: ''
      return:
        type:
          - botbuilder-calling.RecognizeAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.constructor
    name: RecognizeAction(CallSession)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the action builder.
    syntax:
      content: 'new RecognizeAction(session?: CallSession)'
      parameters:
        - id: session
          type:
            - botbuilder-calling.CallSession
          description: ''
          optional: true
    package: botbuilder-calling
  - uid: botbuilder-calling.RecognizeAction.toAction
    name: toAction()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the JSON object for the action.
    syntax:
      content: function toAction()
      parameters: []
      return:
        type:
          - botbuilder-calling.IAction
        description: ''
    package: botbuilder-calling
references:
  - uid: botbuilder-calling.CallSession
    name: CallSession
    spec.typeScript:
      - name: CallSession
        fullName: CallSession
        uid: botbuilder-calling.CallSession
  - uid: botbuilder-calling.RecognizeAction
    name: RecognizeAction
    spec.typeScript:
      - name: RecognizeAction
        fullName: RecognizeAction
        uid: botbuilder-calling.RecognizeAction
  - uid: 'botbuilder-calling.IRecognitionChoice[]'
    name: 'IRecognitionChoice[]'
    spec.typeScript:
      - name: IRecognitionChoice
        fullName: IRecognitionChoice
        uid: botbuilder-calling.IRecognitionChoice
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder-calling.ICollectDigits
    name: ICollectDigits
    spec.typeScript:
      - name: ICollectDigits
        fullName: ICollectDigits
        uid: botbuilder-calling.ICollectDigits
  - uid: botbuilder-calling.IAction | botbuilder-calling.IIsAction
    name: IIsAction
    spec.typeScript:
      - name: IAction
        fullName: IAction
        uid: botbuilder-calling.IAction
      - name: ' | '
        fullName: ' | '
      - name: IIsAction
        fullName: IIsAction
        uid: botbuilder-calling.IIsAction
  - uid: botbuilder-calling.IAction
    name: IAction
    spec.typeScript:
      - name: IAction
        fullName: IAction
        uid: botbuilder-calling.IAction
