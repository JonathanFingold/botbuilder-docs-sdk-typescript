### YamlMime:UniversalReference
items:
  - uid: botbuilder-calling.PlayPromptAction
    name: PlayPromptAction
    fullName: PlayPromptAction
    children:
      - botbuilder-calling.PlayPromptAction.file
      - botbuilder-calling.PlayPromptAction.constructor
      - botbuilder-calling.PlayPromptAction.prompts
      - botbuilder-calling.PlayPromptAction.silence
      - botbuilder-calling.PlayPromptAction.text
      - botbuilder-calling.PlayPromptAction.toAction
    langs:
      - typeScript
    type: class
    summary: >-
      Action builder class designed to simplify building [playPrompt
      actions](/en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iplaypromptaction).
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.file
    name: 'file(CallSession, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a file prompt that will be played to the user.
    syntax:
      content: 'static function file(session: CallSession, uri: string)'
      parameters:
        - id: session
          type:
            - botbuilder-calling.CallSession
          description: ''
        - id: uri
          type:
            - string
          description: ''
      return:
        type:
          - botbuilder-calling.PlayPromptAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.constructor
    name: PlayPromptAction(CallSession)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the action builder.
    syntax:
      content: 'new PlayPromptAction(session?: CallSession)'
      parameters:
        - id: session
          type:
            - botbuilder-calling.CallSession
          description: ''
          optional: true
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.prompts
    name: 'prompts(IPrompt[] | IIsPrompt[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: List of prompts to play out with each single prompt object.
    syntax:
      content: 'function prompts(list: IPrompt[] | IIsPrompt[])'
      parameters:
        - id: list
          type:
            - 'botbuilder-calling.IPrompt[] | botbuilder-calling.IIsPrompt[]'
          description: ''
      return:
        type:
          - botbuilder-calling.PlayPromptAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.silence
    name: 'silence(CallSession, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a prompt that plays silence to the user.
    syntax:
      content: 'static function silence(session: CallSession, time: number)'
      parameters:
        - id: session
          type:
            - botbuilder-calling.CallSession
          description: ''
        - id: time
          type:
            - number
          description: ''
      return:
        type:
          - botbuilder-calling.PlayPromptAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.text
    name: 'text(CallSession, string | string[], any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a text prompt that will be spoken to the user using TTS.
    syntax:
      content: >-
        static function text(session: CallSession, text: string | string[],
        args: any[])
      parameters:
        - id: session
          type:
            - botbuilder-calling.CallSession
          description: ''
        - id: text
          type:
            - 'string | string[]'
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - botbuilder-calling.PlayPromptAction
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.PlayPromptAction.toAction
    name: toAction()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the JSON object for the action.
    syntax:
      content: function toAction()
      parameters: []
      return:
        type:
          - botbuilder-calling.IAction
        description: ''
    package: botbuilder-calling
references:
  - uid: botbuilder-calling.CallSession
    name: CallSession
    spec.typeScript:
      - name: CallSession
        fullName: CallSession
        uid: botbuilder-calling.CallSession
  - uid: 'botbuilder-calling.IPrompt[] | botbuilder-calling.IIsPrompt[]'
    name: 'IIsPrompt[]'
    spec.typeScript:
      - name: IPrompt
        fullName: IPrompt
        uid: botbuilder-calling.IPrompt
      - name: '[] | '
        fullName: '[] | '
      - name: IIsPrompt
        fullName: IIsPrompt
        uid: botbuilder-calling.IIsPrompt
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder-calling.PlayPromptAction
    name: PlayPromptAction
    spec.typeScript:
      - name: PlayPromptAction
        fullName: PlayPromptAction
        uid: botbuilder-calling.PlayPromptAction
  - uid: botbuilder-calling.IAction
    name: IAction
    spec.typeScript:
      - name: IAction
        fullName: IAction
        uid: botbuilder-calling.IAction
