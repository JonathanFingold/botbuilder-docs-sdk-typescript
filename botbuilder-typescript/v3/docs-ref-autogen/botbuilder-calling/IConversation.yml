### YamlMime:UniversalReference
items:
  - uid: botbuilder-calling.IConversation
    name: IConversation
    fullName: IConversation
    children:
      - botbuilder-calling.IConversation.address
      - botbuilder-calling.IConversation.agent
      - botbuilder-calling.IConversation.callState
      - botbuilder-calling.IConversation.links
      - botbuilder-calling.IConversation.presentedModalityTypes
      - botbuilder-calling.IConversation.source
      - botbuilder-calling.IConversation.sourceEvent
      - botbuilder-calling.IConversation.type
      - botbuilder-calling.IConversation.user
    langs:
      - typeScript
    type: interface
    summary: >-
      IConversation is a JSON body of a first request for new Skype voice call
      made by Skype Bot Platform

      for Calling to a bot. IConversation JSON body is posted on initial HTTPs
      endpoint registered by a bot

      developer in the Bot Framework Portal. IConversation request contains
      information about caller and target

      of the call and some additional information about initial state of a call.
    extends:
      name: botbuilder-calling.IEvent
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.address
    name: address
    fullName: address
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Address routing information for the event. Save this field to external
      storage somewhere to later compose a proactive message to the user.
    syntax:
      content: 'address: IAddress'
      return:
        type:
          - botbuilder-calling.IAddress
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.agent
    name: agent
    fullName: agent
    children: []
    langs:
      - typeScript
    type: property
    summary: SDK thats processing the event. Will always be 'botbuilder'.
    syntax:
      content: 'agent: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.callState
    name: callState
    fullName: callState
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates the current state of the call.
    syntax:
      content: 'callState: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.links
    name: links
    fullName: links
    children: []
    langs:
      - typeScript
    type: property
    summary: Dictionary containing list of HTTPs links.
    optional: true
    syntax:
      content: 'links?: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.presentedModalityTypes
    name: presentedModalityTypes
    fullName: presentedModalityTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: Flag indicates which modalities were presented by Skype user for a call.
    syntax:
      content: 'presentedModalityTypes: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.source
    name: source
    fullName: source
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The original source of the event (i.e. ''facebook'', ''skype'', ''slack'', etc.)'
    syntax:
      content: 'source: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.sourceEvent
    name: sourceEvent
    fullName: sourceEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The original event in the sources native schema. For outgoing messages can
      be used to pass source specific event data like custom attachments.
    syntax:
      content: 'sourceEvent: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines type of event. Should be 'message' for an IEvent.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversation.user
    name: user
    fullName: user
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For incoming event this is the user that sent the event. By default this
      is a copy of
      [address.user](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iaddress.html#user)
      but you can configure your bot with a

      [lookupUser](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iuniversalcallbotsettings.html#lookupuser)
      function that lets map the incoming user to an internal user id.
    syntax:
      content: 'user: IIdentity'
      return:
        type:
          - botbuilder-calling.IIdentity
        description: ''
    package: botbuilder-calling
references:
  - uid: botbuilder-calling.IEvent
    name: IEvent
    spec.typeScript:
      - name: IEvent
        fullName: IEvent
        uid: botbuilder-calling.IEvent
  - uid: botbuilder-calling.IAddress
    name: IAddress
    spec.typeScript:
      - name: IAddress
        fullName: IAddress
        uid: botbuilder-calling.IAddress
  - uid: botbuilder-calling.IIdentity
    name: IIdentity
    spec.typeScript:
      - name: IIdentity
        fullName: IIdentity
        uid: botbuilder-calling.IIdentity
