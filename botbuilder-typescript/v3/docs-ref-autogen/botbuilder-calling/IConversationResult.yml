### YamlMime:UniversalReference
items:
  - uid: botbuilder-calling.IConversationResult
    name: IConversationResult
    fullName: IConversationResult
    children:
      - botbuilder-calling.IConversationResult.address
      - botbuilder-calling.IConversationResult.agent
      - botbuilder-calling.IConversationResult.callState
      - botbuilder-calling.IConversationResult.links
      - botbuilder-calling.IConversationResult.operationOutcome
      - botbuilder-calling.IConversationResult.recordedAudio
      - botbuilder-calling.IConversationResult.source
      - botbuilder-calling.IConversationResult.sourceEvent
      - botbuilder-calling.IConversationResult.type
      - botbuilder-calling.IConversationResult.user
    langs:
      - typeScript
    type: interface
    summary: >-
      IConversationResult is a JSON body of any subsequent request following the
      initial IConversation

      notification that is send to a bot from Skype Bot Platform for Calling.
      IConversationResult is

      posted to a callback link provided by previous Workflow response.
      IConversationResult represents

      the result of a last successful action from previous Workflow response.
    extends:
      name: botbuilder-calling.IEvent
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.address
    name: address
    fullName: address
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Address routing information for the event. Save this field to external
      storage somewhere to later compose a proactive message to the user.
    syntax:
      content: 'address: IAddress'
      return:
        type:
          - botbuilder-calling.IAddress
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.agent
    name: agent
    fullName: agent
    children: []
    langs:
      - typeScript
    type: property
    summary: SDK thats processing the event. Will always be 'botbuilder'.
    syntax:
      content: 'agent: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.callState
    name: callState
    fullName: callState
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates the current state of the call.
    syntax:
      content: 'callState: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.links
    name: links
    fullName: links
    children: []
    langs:
      - typeScript
    type: property
    summary: Dictionary containing list of HTTPs links.
    optional: true
    syntax:
      content: 'links?: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.operationOutcome
    name: operationOutcome
    fullName: operationOutcome
    children: []
    langs:
      - typeScript
    type: property
    summary: Outcome of last executed workflow action.
    syntax:
      content: 'operationOutcome: IActionOutcome'
      return:
        type:
          - botbuilder-calling.IActionOutcome
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.recordedAudio
    name: recordedAudio
    fullName: recordedAudio
    children: []
    langs:
      - typeScript
    type: property
    summary: Buffer of recorded data for a RecordAction.
    optional: true
    syntax:
      content: 'recordedAudio?: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.source
    name: source
    fullName: source
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The original source of the event (i.e. ''facebook'', ''skype'', ''slack'', etc.)'
    syntax:
      content: 'source: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.sourceEvent
    name: sourceEvent
    fullName: sourceEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The original event in the sources native schema. For outgoing messages can
      be used to pass source specific event data like custom attachments.
    syntax:
      content: 'sourceEvent: any'
      return:
        type:
          - any
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines type of event. Should be 'message' for an IEvent.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-calling
  - uid: botbuilder-calling.IConversationResult.user
    name: user
    fullName: user
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For incoming event this is the user that sent the event. By default this
      is a copy of
      [address.user](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iaddress.html#user)
      but you can configure your bot with a

      [lookupUser](en-us/node/builder/calling-reference/interfaces/_botbuilder_d_.iuniversalcallbotsettings.html#lookupuser)
      function that lets map the incoming user to an internal user id.
    syntax:
      content: 'user: IIdentity'
      return:
        type:
          - botbuilder-calling.IIdentity
        description: ''
    package: botbuilder-calling
references:
  - uid: botbuilder-calling.IEvent
    name: IEvent
    spec.typeScript:
      - name: IEvent
        fullName: IEvent
        uid: botbuilder-calling.IEvent
  - uid: botbuilder-calling.IAddress
    name: IAddress
    spec.typeScript:
      - name: IAddress
        fullName: IAddress
        uid: botbuilder-calling.IAddress
  - uid: botbuilder-calling.IActionOutcome
    name: IActionOutcome
    spec.typeScript:
      - name: IActionOutcome
        fullName: IActionOutcome
        uid: botbuilder-calling.IActionOutcome
  - uid: botbuilder-calling.IIdentity
    name: IIdentity
    spec.typeScript:
      - name: IIdentity
        fullName: IIdentity
        uid: botbuilder-calling.IIdentity
