### YamlMime:UniversalReference
items:
  - uid: botbuilder-azure.BotServiceConnector
    name: BotServiceConnector
    fullName: BotServiceConnector
    children:
      - botbuilder-azure.BotServiceConnector.constructor
      - botbuilder-azure.BotServiceConnector.getData
      - botbuilder-azure.BotServiceConnector.listen
      - botbuilder-azure.BotServiceConnector.onEvent
      - botbuilder-azure.BotServiceConnector.saveData
      - botbuilder-azure.BotServiceConnector.send
      - botbuilder-azure.BotServiceConnector.startConversation
    langs:
      - typeScript
    type: class
    summary: Connects a UniversalBot to multiple channels via the Bot Framework.
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.constructor
    name: BotServiceConnector(IBotServiceConnectorSettings)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instnace of the BotServiceConnector.
    syntax:
      content: 'new BotServiceConnector(settings?: IBotServiceConnectorSettings)'
      parameters:
        - id: settings
          type:
            - botbuilder-azure.IBotServiceConnectorSettings
          description: >
            (Optional) config params that let you specify the bots App ID &
            Password you were assigned in the Bot Frameworks developer portal.
          optional: true
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.getData
    name: 'getData(IBotStorageContext, (err: Error, data: IBotStorageData) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Reads in data from the Bot Frameworks state service.
    syntax:
      content: >-
        function getData(context: IBotStorageContext, callback: (err: Error,
        data: IBotStorageData) => void)
      parameters:
        - id: context
          type:
            - botbuilder-azure.IBotStorageContext
          description: ''
        - id: callback
          type:
            - '(err: Error, data: IBotStorageData) => void'
          description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.listen
    name: listen()
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers an Express or Restify style hook to listen for new messages.
    syntax:
      content: function listen()
      parameters: []
      return:
        type:
          - '(req: any, res: any) => void'
        description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.onEvent
    name: 'onEvent((events: IEvent[], callback?: (err: Error) => void) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called by the UniversalBot at registration time to register a handler for
      receiving incoming events from a channel.
    syntax:
      content: >-
        function onEvent(handler: (events: IEvent[], callback?: (err: Error) =>
        void) => void)
      parameters:
        - id: handler
          type:
            - '(events: IEvent[], callback?: (err: Error) => void) => void'
          description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.saveData
    name: 'saveData(IBotStorageContext, IBotStorageData, (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Writes out data to the Bot Frameworks state service.
    syntax:
      content: >-
        function saveData(context: IBotStorageContext, data: IBotStorageData,
        callback?: (err: Error) => void)
      parameters:
        - id: context
          type:
            - botbuilder-azure.IBotStorageContext
          description: ''
        - id: data
          type:
            - botbuilder-azure.IBotStorageData
          description: ''
        - id: callback
          type:
            - '(err: Error) => void'
          description: ''
          optional: true
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.send
    name: 'send(IMessage[], (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Called by the UniversalBot to deliver outgoing messages to a user.
    syntax:
      content: 'function send(messages: IMessage[], done: (err: Error) => void)'
      parameters:
        - id: messages
          type:
            - 'botbuilder-azure.IMessage[]'
          description: ''
        - id: done
          type:
            - '(err: Error) => void'
          description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.BotServiceConnector.startConversation
    name: 'startConversation(IAddress, (err: Error, address?: IAddress) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called when a UniversalBot wants to start a new proactive conversation
      with a user. The connector should return a properly formated __address__
      object with a populated __conversation__ field.
    syntax:
      content: >-
        function startConversation(address: IAddress, done: (err: Error,
        address?: IAddress) => void)
      parameters:
        - id: address
          type:
            - botbuilder-azure.IAddress
          description: ''
        - id: done
          type:
            - '(err: Error, address?: IAddress) => void'
          description: ''
    package: botbuilder-azure
references:
  - uid: botbuilder-azure.IBotServiceConnectorSettings
    name: IBotServiceConnectorSettings
    spec.typeScript:
      - name: IBotServiceConnectorSettings
        fullName: IBotServiceConnectorSettings
        uid: botbuilder-azure.IBotServiceConnectorSettings
  - uid: botbuilder-azure.IBotStorageContext
    name: IBotStorageContext
    spec.typeScript:
      - name: IBotStorageContext
        fullName: IBotStorageContext
        uid: botbuilder-azure.IBotStorageContext
  - uid: botbuilder-azure.IBotStorageData
    name: IBotStorageData
    spec.typeScript:
      - name: IBotStorageData
        fullName: IBotStorageData
        uid: botbuilder-azure.IBotStorageData
  - uid: 'botbuilder-azure.IMessage[]'
    name: 'IMessage[]'
    spec.typeScript:
      - name: IMessage
        fullName: IMessage
        uid: botbuilder-azure.IMessage
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder-azure.IAddress
    name: IAddress
    spec.typeScript:
      - name: IAddress
        fullName: IAddress
        uid: botbuilder-azure.IAddress
