### YamlMime:UniversalReference
items:
  - uid: botbuilder-azure.AzureBotStorage
    name: AzureBotStorage
    fullName: AzureBotStorage
    children:
      - botbuilder-azure.AzureBotStorage.constructor
      - botbuilder-azure.AzureBotStorage.client
      - botbuilder-azure.AzureBotStorage.getData
      - botbuilder-azure.AzureBotStorage.saveData
    langs:
      - typeScript
    type: class
    summary: Azure Storage based implementation of IBotStorage.
    package: botbuilder-azure
  - uid: botbuilder-azure.AzureBotStorage.constructor
    name: 'AzureBotStorage(IAzureBotStorageOptions, IStorageClient)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new instance of the AzureBotStorage.
    syntax:
      content: >-
        new AzureBotStorage(options: IAzureBotStorageOptions, storageClient?:
        IStorageClient)
      parameters:
        - id: options
          type:
            - botbuilder-azure.IAzureBotStorageOptions
          description: config params that let you specify storage preferences
        - id: storageClient
          type:
            - botbuilder-azure.IStorageClient
          description: ''
          optional: true
    package: botbuilder-azure
  - uid: botbuilder-azure.AzureBotStorage.client
    name: client(IStorageClient)
    children: []
    type: method
    langs:
      - typeScript
    summary: Configures the storage client to use for bot state
    syntax:
      content: 'function client(storageClient: IStorageClient)'
      parameters:
        - id: storageClient
          type:
            - botbuilder-azure.IStorageClient
          description: ''
      return:
        type:
          - this
        description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.AzureBotStorage.getData
    name: 'getData(IBotStorageContext, (err: Error, data: IBotStorageData) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Reads in data from the table.
    syntax:
      content: >-
        function getData(context: IBotStorageContext, callback: (err: Error,
        data: IBotStorageData) => void)
      parameters:
        - id: context
          type:
            - botbuilder-azure.IBotStorageContext
          description: ''
        - id: callback
          type:
            - '(err: Error, data: IBotStorageData) => void'
          description: ''
    package: botbuilder-azure
  - uid: botbuilder-azure.AzureBotStorage.saveData
    name: 'saveData(IBotStorageContext, IBotStorageData, (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Writes out data to the table.
    syntax:
      content: >-
        function saveData(context: IBotStorageContext, data: IBotStorageData,
        callback?: (err: Error) => void)
      parameters:
        - id: context
          type:
            - botbuilder-azure.IBotStorageContext
          description: ''
        - id: data
          type:
            - botbuilder-azure.IBotStorageData
          description: ''
        - id: callback
          type:
            - '(err: Error) => void'
          description: ''
          optional: true
    package: botbuilder-azure
references:
  - uid: botbuilder-azure.IAzureBotStorageOptions
    name: IAzureBotStorageOptions
    spec.typeScript:
      - name: IAzureBotStorageOptions
        fullName: IAzureBotStorageOptions
        uid: botbuilder-azure.IAzureBotStorageOptions
  - uid: botbuilder-azure.IStorageClient
    name: IStorageClient
    spec.typeScript:
      - name: IStorageClient
        fullName: IStorageClient
        uid: botbuilder-azure.IStorageClient
  - uid: botbuilder-azure.IBotStorageContext
    name: IBotStorageContext
    spec.typeScript:
      - name: IBotStorageContext
        fullName: IBotStorageContext
        uid: botbuilder-azure.IBotStorageContext
  - uid: botbuilder-azure.IBotStorageData
    name: IBotStorageData
    spec.typeScript:
      - name: IBotStorageData
        fullName: IBotStorageData
        uid: botbuilder-azure.IBotStorageData
